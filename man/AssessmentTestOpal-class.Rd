% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AssessmentTestOpal.R
\docType{class}
\name{AssessmentTestOpal-class}
\alias{AssessmentTestOpal-class}
\alias{AssessmentTestOpal}
\title{Class "AssessmentTestOpal"}
\description{
Abstract class \code{AssessmentTestOpal} is responsible for creating xml exam file
according to QTI 2.1. for LMS Opal
\if{html}{\out{<div style="text-align:center">}\figure{assessmentTest.png}
\out{</div>}}
}
\details{
Test consists of one or more sections. Each section can have one or more
questions/tasks and/or one or more sub sections.
}
\section{Slots}{

\describe{
\item{\code{identifier}}{string; identifier of the xml test file}

\item{\code{title}}{string; file title}

\item{\code{points}}{numeric; maximum number of points for the exam/test}

\item{\code{test_part_identifier}}{string; identifier of the test part}

\item{\code{navigation_mode}}{string, optional; determines the general paths that the
candidate may have during exam; two mode options are possible:
\itemize{
\item "linear" - candidate is not allowed to return to the previous questions
\item "nonlinear" - candidate if free to navigate, used by \strong{default}
}}

\item{\code{submission_mode}}{string, optional; determines when the candidate's
responses are submitted for response processing; two mode options are
possible:
\itemize{
\item "individual" - submit candidates' responses on an item-by-idem
basis, used by \strong{default}
\item "simultaneous - candidates' responses are submitted all together by the
end of the test
}}

\item{\code{section}}{list; list of \linkS4class{AssessmentSection} objects}

\item{\code{qti_version}}{string, optional; qti information model version, default
'v2p1'}

\item{\code{time_limits}}{numeric, optional;  controls the amount of time \emph{in
minutes} a candidate is allowed for this part of the test}

\item{\code{max_attempts}}{numeric, optional; enables the maximum number of attempts,
that candidate is allowed to pass}

\item{\code{allow_comment}}{boolean, optional; enables to allow candidate to leave
comments in each question}

\item{\code{rebuild_variables}}{boolean, optional; enables to recalculate variables
and reshuffle the order of choices for each item-attempt}

\item{\code{academic_grading}}{boolean, optional; enables to show to candidate at the
end of the testing a grade according to 5-point academic grade system as a
feedback; \code{FALSE} by default}

\item{\code{grade_label}}{character, optional; a short message that shows with a
grade in the final feedback; for multilingual use, it can be a named vector
with two-letter ISO language codes as names (e.g., c(en="Grade",
de="Note")); during test creation, it takes the value for the language of
the operating system; "Grade" is default}

\item{\code{show_test_time}}{boolean, optional; determines to show candidate elapsed
processing time without time limit; default 'FALSE'}

\item{\code{calculator}}{string, optional; determines to show to candidate calculator;
possible values:
\itemize{
\item "simple-calculator"
\item "scientific-calculator"
\item "" - by default
}}

\item{\code{mark_items}}{boolean, optional; determines to allow candidate marking of
questions, default 'TRUE'}

\item{\code{keep_responses}}{boolean, optional; determines to save candidate's
answers of the previous attempt}

\item{\code{files}}{string vector, optional; paths to files, which will be accessible
to candidate during the test/exam}
}}

\note{
use \code{\link[=create_qti_test]{create_qti_test()}} to create an xml file for test specification
}
\examples{
\dontrun{
This example creates test 'exam' with one section 'exam_section' which
consists of two questions/tasks: essay and single choice types
}
task1 <- new("Essay", prompt = "Test task", title = "Essay",
             identifier = "q1")
task2 <- new("SingleChoice", prompt = "Test task", title = "SingleChoice",
             choices = c("A", "B", "C"), identifier = "q2")
exam_section <- new("AssessmentSection", identifier = "sec_id",
                    title = "section", assessment_item = list(task1, task2))
exam <- new("AssessmentTestOpal", identifier = "id_test",
            title = "some title", section = list(exam_section))
}
\seealso{
\link{AssessmentSection}
}
