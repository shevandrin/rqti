[{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://shevandrin.github.io/qti/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://shevandrin.github.io/qti/articles/api_opal.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Working with API OPAL from qti","text":"qti package facilitates seamless content uploads OPAL learning management system upload2opal function, leveraging OPAL API. Upload Zip Archive: possess pre-existing zip archive containing QTI-compliant test, can effortlessly uploaded OPAL. Upload Rmd File: Rmd exercise files, upload2opal function wraps zip archive initiating upload process OPAL. Upload XML File: QTI-compliant exercise file XML format, upload2opal function wraps zip archive prior uploading OPAL.","code":""},{"path":"https://shevandrin.github.io/qti/articles/api_opal.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Working with API OPAL from qti","text":"leverage functionality OPAL API, essential OPAL users possess requisite permissions. Access system necessitates logging username password. Please note utilizing API Shibboleth authorization supported. currently lack password-based login, kindly submit request one department. users affiliated TU Chemnitz, can expedite process sending email e-learning@tu-chemnitz.de. email, explicitly state need password-based login facilitate API usage, include username reference. store username password, qti uses keyring system credential storage. first time authentication attempted, asks username password saves key service name “qtiopal”. key created, automatically used sessions. recommended create additional keys workflow runs smoothly. universities allow use OPAL API network university. calling upload2opal() set VPN client accordingly. TU Chemnitz see instructions ","code":""},{"path":"https://shevandrin.github.io/qti/articles/api_opal.html","id":"uploading-testexercise-to-opal","dir":"Articles","previous_headings":"","what":"Uploading test/exercise to OPAL","title":"Working with API OPAL from qti","text":"can either set knit: qti::render_opal parameter yaml-section Rmd file just call upload2opal() file first parameter: successful can expect following outcomes: web browser open automatically, displaying OPAL page uploaded test exercise. R console, receive status code 200. status code indicates request upload content OPAL successful. result variable contain list following data: $key: identifier resource OPAL, can use reference. $display_name: title resource appears browser OPAL. $url: permanent link access resource OPAL. upload2opal() always checks uniqueness display_name personal repository resources OPAL. resource name found, qti overwrite default. useful incrementally improving previewing/testing exercise. avoids cluttering OPAL repo dozens versions exercise. several resources name, upload2opal ask . default upload2opal() uses file name display_name. can define second parameter: Currently, option delete exercises via API. can display URL exercise via: show resources via: return list resources, nested list. want fine-grained control uploading, check documentation ?upload2opal","code":"file <- \"my_zip_file.zip\" # or \"exercise.Rmd\" or \"exercise.xml\" result <- upload2opal(file) result <- upload2opal(file, display_name = \"Exam123\") get_resource_url(display_name = \"Exam123\") get_resources()"},{"path":"https://shevandrin.github.io/qti/articles/api_opal.html","id":"access-rights","dir":"Articles","previous_headings":"","what":"Access rights","title":"Working with API OPAL from qti","text":"Note access rights resource set public default. might appear unusual, creating exercises incrementally best option. use access rights, need login OPAL via browser see web page, log via API. Currently, better solution procedure. Take account upload sensitive content! instance, exercises used upcoming exam. can set access rights via 1: persons responsible learning resource 2: responsible authors 3: registered users 4: public, default value","code":"uplod2opal(..., access = ?)"},{"path":"https://shevandrin.github.io/qti/articles/api_opal.html","id":"endpoint","dir":"Articles","previous_headings":"","what":"Endpoint","title":"Working with API OPAL from qti","text":"using OPAL instance E-Learning-Informationsportal für Sächsische Hochschulen, package sets endpoint upload2opal https://bildungsportal.sachsen.de/opal/. use different OPAL instance, can either pass endpoint upload2opal just set environment variable .Renviron file: QTI_API_ENDPOINT=“yoururl”.","code":""},{"path":"https://shevandrin.github.io/qti/articles/api_opal.html","id":"error-handling","dir":"Articles","previous_headings":"","what":"Error Handling","title":"Working with API OPAL from qti","text":"403 - Authorization failed. universities allow use API within university network. may need run VPN client use API. TU Chemnitz see already run VPN client, please check /OPAL provider, whether API can used configuration need. 401 Unauthorized QTI_API_USER /QTI_API_PASSWORD wrong credentials sufficient work API.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Directed Pairs Exercises","text":"type exercise, candidate given two sets items, need matched. template available RStudio click New file -> R Markdown -> Template. qti templates start QTI:. look templates QTI: directedpair (simple) QTI: directedpair (complex). minimum need provide type: pair (equivalent type: dp) yaml-section list least two elements section called #question: Knitting via Knit-Button qtijs, exercise renders :  pairs specified markdown list matching elements separated |. list last element question section! alternative provide table exercise matching elements, see Tables Note used example, feedback section also provided. feedback optional, usually good idea give explanation students. Note knit parameter set custom qti knit function, handle preview. Clicking Knit button RStudio renders file viewer pane. Alternatively, change knit parameter knit: qti::render_opal (see API Opal) upload opal directly, producing:","code":"--- type: pair knit: qti::render_qtijs ---  # question  In this task the candidate has to match elements from two sets.  As a source of data just provide a markdown list with right pairs of items, separated by `|`.  Match the following `QTI` functions with their purpose:  * rmd2zip | from Rmd-file create zip-file with exercise * rmd2xml | from Rmd-file create xml-file with exercise * render_opal | render Rmd directly to LMS OPAL  # feedback  Provide your feedback here."},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Directed Pairs Exercises","text":"want fine-grained control, consider RMD template QTI: directedpair (complex), wich uses yaml attributes. renders : Preview directed pair exercise LMS OP","code":"--- type: dp knit: qti::render_qtijs identifier: TOPIC1_Q006 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS orientation: horizontal # how items are placed on screen shuffle: true # random order of elements ---  # question  In this task the candidate has to match elements from two sets.  As a source of data just provide a markdown list with the correct pairs, separated by `|`.  Match the following `QTI` functions with their purpose:  * rmd2zip | from Rmd-file create zip-file with exercise * rmd2xml | from Rmd-file create xml-file with exercise * render_opal | render Rmd directly on LMS OPAL   # feedback  Provide your feedback here.  <!-- If you prefer specific feedback for correct and incorrect solution, delete the general feedback section and uncomment everything starting from this line:  # feedback+  Nice. (Only displayed when the solution is correct.)  # feedback-  Try again. (Only displayed if the solution is not correct.) -->"},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Directed Pairs Exercises","text":"pair dp.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Directed Pairs Exercises","text":"id exercise, useful later data analysis results. default file name. extensive data analysis later makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Directed Pairs Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"orientation","dir":"Articles","previous_headings":"yaml attributes","what":"orientation","title":"Directed Pairs Exercises","text":"Defines vertical horizontal mode displaying responses. Default vertical.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"shuffle","dir":"Articles","previous_headings":"yaml attributes","what":"shuffle","title":"Directed Pairs Exercises","text":"true (default), randomizes order elements. rare occasions makes sense strict order elements (setting shuffle false).","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"points","dir":"Articles","previous_headings":"yaml attributes","what":"points","title":"Directed Pairs Exercises","text":"many points given whole exercise. Default 1.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"answers_scores","dir":"Articles","previous_headings":"yaml attributes","what":"answers_scores","title":"Directed Pairs Exercises","text":"case important different values points different pairs, necessary list points order pairs defined list: answers_scores: 2, 2, 1. case, total number points calculated sum ‘answers_scores’, attribute ‘points’, set, ignored.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"abbr_id","dir":"Articles","previous_headings":"yaml attributes","what":"abbr_id","title":"Directed Pairs Exercises","text":"abbr_id omitted, ‘qti’ generates identifiers right_1, right_2, …right_N left_1, left_2…left_N. contain semantics, can useful abbreviate identifiers, abbr_id . Depending length items, abbreivations less useful, case useful non-semantic identifiers.","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"feedback","dir":"Articles","previous_headings":"","what":"Feedback","title":"Directed Pairs Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) # feedback+ (provided student reaches points) # feedback- (provided student reach points)","code":""},{"path":"https://shevandrin.github.io/qti/articles/directedpairs.html","id":"some-advice-on-directed-pair-exercises","dir":"Articles","previous_headings":"","what":"Some advice on directed pair exercises","title":"Directed Pairs Exercises","text":"Directed pairs forced choice exercises, similar problems single choice multiple choice exercises (guessing increases variance). specific problem directed pairs answers independent. Making mistake lead additional mistakes two elements blocked one match. Use directed pairs care. One might think directed pairs superfluous match tables serve purpose. difference match tables either row column can used . directed pairs, matching pair makes elements unavailable matching. unique, use cases directed pairs.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Dropdown Exercises","text":"type exercise, candidate select element form dropdown-list. Note package implements dropdowns gaps essentialy dropwdowns . Several dropdowns can combined single exercise, combination numeric text gaps possible. template available RStudio click New file -> R Markdown -> Template. qti templates start QTI:. look templates QTI: dropdown (simple) QTI: dropdown (complex). minimum need provide type: dropdown (equivalent type: dd) yaml-section text, least one gap formed dropdown-element, section called #question: Knitting via Knit-Button qtijs, exercise renders :  Alternatively, change knit parameter knit: render_opal (see API Opal) upload Opal directly, producing:  2 ways specify dropdown-element Rmd content: Put right answer inside << … >> (equivalent <gap> … <\/gap>). Example: <<element1|element2|element3>> use helper function dropdown default, 1 point can reached dropdown (specify points needs). total number points completing task defined sum points dropdowns. Note example, feedback section also provided. feedback optional, usually good idea give explanation students. dropdown exercises feedback refers whole task, specific dropdown. Group feedback appropriate sections, can opened/closed better user experience (use details summary html tags).","code":"--- type: dropdown knit: qti::render_qtijs ---  ```{r echo=F} library(qti) ```  # question  The philosophy of the qti package is <<do one thing and do it well|one for all>>.  Under the hood, the qti package uses `r dropdown(c(\"S4 OOP\", \"S3 OOP\", \"no OOP\", \"R6 OOP\"))`.  # feedback  The package `qti` is specialized for producing xml qti files so \"do one thing and do it well\" is more appropriate. Under the hood we use S4 OOP."},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Dropdown Exercises","text":"want fine-grained control, consider RMD template QTI: dropdown (complex), uses yaml attributes. renders :","code":"--- type: dd # type of exercise knit: qti::render_qtijs # if you do not want our preview renderer, remove this identifier: TOPIC1_Q001 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS ---  ```{r echo=F} library(qti) ```  # question  The philosophy of the qti package is <<do one thing and do it well|one for all>>.  Under the hood, the qti package uses `r dropdown(c(\"no OOP\" = \"no OOP\", \"S4\" = \"S4 OOP\", \"S3\" = \"S3 OOP\", \"R6\" = \"R6 OOP\"), solution_index = 2, points = 2, response_identifier = \"OOP_task\")`.  # feedback  The package `qti` is specialized for producing xml qti files so \"do one thing and do it well\" is more appropriate. Under the hood we use S4 OOP."},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Dropdown Exercises","text":"dropdown dd.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Dropdown Exercises","text":"id exercise, useful later data analysis results. default file name. extensive data analysis later makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Dropdown Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"feedback","dir":"Articles","previous_headings":"","what":"Feedback","title":"Dropdown Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) # feedback+ (provided student reaches points) # feedback- (provided student reach points)","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"helper-function-dropdown","dir":"Articles","previous_headings":"","what":"Helper function dropdown","title":"Dropdown Exercises","text":"helper function used generate formatted string describing dropdown Rmd content: Argument list dropdown:","code":"choices <- c(\"c1\" = \"S4 OOP\", \"c2\" = \"S3 OOP\", \"c3\" = \"no OOP\", \"c4\" = \"R6 OOP\") oop_task <- dropdown(choices = choices, solution = \"S4 OOP\",                      response_identifier = \"OOP_task\") oop_task #> [1] \"<gap>{choices: [S4 OOP,S3 OOP,no OOP,R6 OOP], solution_index: S4 OOP, points: 1.0, shuffle: yes, response_identifier: OOP_task, choices_identifiers: [c1,c2,c3,c4], type: InlineChoice}<\/gap>\""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"choices","dir":"Articles","previous_headings":"Helper function dropdown","what":"choices","title":"Dropdown Exercises","text":"Elements dropdown. use named vector, names used identifiers. useful later data analysis.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"solution_index","dir":"Articles","previous_headings":"Helper function dropdown","what":"solution_index","title":"Dropdown Exercises","text":"index correct choice numeric. Default 1, meaning can simply put correct element first one vector choices.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"points","dir":"Articles","previous_headings":"Helper function dropdown","what":"points","title":"Dropdown Exercises","text":"number points exercise. Default 1.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"shuffle","dir":"Articles","previous_headings":"Helper function dropdown","what":"shuffle","title":"Dropdown Exercises","text":"TRUE, randomizes order choices. Defaults TRUE. rare occasions makes sense strict order choices (setting shuffle FALSE).","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"response_identifier","dir":"Articles","previous_headings":"Helper function dropdown","what":"response_identifier","title":"Dropdown Exercises","text":"ID dropdown-element, useful later data analysis results. default format “response_1”, “response_2”, …“response_n” several dropdowns. extensive data analysis later , makes sense specify meaningful identifier.","code":""},{"path":"https://shevandrin.github.io/qti/articles/dropdown.html","id":"some-advice-on-dropdown-exercises","dir":"Articles","previous_headings":"","what":"Some advice on dropdown exercises","title":"Dropdown Exercises","text":"Dropdown exercises seem similar numeric text gaps, forced choice items, actually equivalent single choice exercises. advantage can placed text several can used single exercise. Still, suffer problems single choice exercises.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Essay Exercises","text":"just typical essay exercise. template available RStudio click New file -> R Markdown -> Template. qti templates start QTI:. look templates QTI: essay (simple) QTI: essay (complex). minimum need provide type: essay yaml-section text task description section called #question: Knitting via Knit-Button qtijs, exercise renders :  Alternatively, change knit parameter knit: render_opal (see API Opal) upload Opal directly, producing:  Note example, feedback section also provided. Since open question requires manual review, general feedback without conditions provided. feedback optional, usually good idea give explanation students. Furthermore, feedback section essay exercises can serve good basis grading student’s answers.","code":"--- type: essay # type of exercise knit: qti::render_qtijs # if you do not want our preview renderer, remove this ---  # question  What are the advantages and disadvantages of the `qti` package as compared to the `exams` package?  # feedback  The qti package can only export to the QTI format, which makes it less general than the `exams` package. But the qti package supports more exercise types, can preview xml files and has a very solid core architecture based on S4 OOP and many tests."},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Essay Exercises","text":"want fine-grained control, consider RMD template QTI: essay (complex), wich uses yaml attributes. Opal renders :","code":"--- type: essay # type of exercise knit: qti::render_qtijs # if you do not want our preview renderer, remove this identifier: TOPIC1_Q001 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS expected_length: 30 # defines the width of the text input field expected_lines: 3 # defines the number of lines of the text input field words_max: 100 # how many words can be written in the text input field words_min: 10 # the minimum number of words to send a response data_allow_paste: false # whether the candidate is allowed to copy text from the clipboard points: 2 ---  # question  What are the advantages and disadvantages of the `qti` package as compared to the `exams` package?  # feedback  The qti package can only export to the QTI format, which makes it less general than the `exams` package. But the qti package supports more exercise types, can preview xml files and has a very solid core architecture based on S4 OOP and many tests."},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Essay Exercises","text":"essay.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Essay Exercises","text":"ID exercise, useful later data analysis results. default file name. extensive data analysis later makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Essay Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"points","dir":"Articles","previous_headings":"yaml attributes","what":"points","title":"Essay Exercises","text":"many points given whole exercise. Default 1.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"expected_length","dir":"Articles","previous_headings":"yaml attributes","what":"expected_length","title":"Essay Exercises","text":"Defines width text input field.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"expected_lines","dir":"Articles","previous_headings":"yaml attributes","what":"expected_lines","title":"Essay Exercises","text":"Defines number lines text input field.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"words_max","dir":"Articles","previous_headings":"yaml attributes","what":"words_max","title":"Essay Exercises","text":"Defines maximum number words can written candidate text input field.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"words_min","dir":"Articles","previous_headings":"yaml attributes","what":"words_min","title":"Essay Exercises","text":"Defines minimum number words must written candidate text input field.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"data_allow_paste","dir":"Articles","previous_headings":"yaml attributes","what":"data_allow_paste","title":"Essay Exercises","text":"Determines whether candidate allowed copy text clipboard text input field. Default FALSE.","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"feedback","dir":"Articles","previous_headings":"","what":"Feedback","title":"Essay Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) feedback plays important role essay exercises expected length maximum words calculated feedback section, one given. Providing useful feedback also defines explicit criteria grading, skip essay exercises, unless good reasons .","code":""},{"path":"https://shevandrin.github.io/qti/articles/essay.html","id":"some-advice-on-essay-exercises","dir":"Articles","previous_headings":"","what":"Some advice on essay exercises","title":"Essay Exercises","text":"Essay exercises can one best exercises instructor asks good question. Unfortunately, many instructors creative unspecific come essay questions. often leads vague criteria grading. avoid , always write ideal solution feedback section. students colleagues thank .","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Gap Exercises","text":"type exercise, candidate asked fill one several gaps. opinion, best way test ability students guessing difficult forced choice answers. Focus gap exercises rewarded better properties tests. package possible combine gaps text numeric answers single exercise. template available RStudio click New file -> R Markdown -> Template. qti templates start QTI:. look templates QTI: gap (simple) QTI: gap (complex). minimum need provide type: gap (equivalent type: cloze) yaml-section text, least one gap used, section called #question: Clicking Knit-button produce following viewer pane:  Alternatively, change knit parameter knit: render_opal (see API Opal) upload opal directly, producing:  can see, two ways create gap Rmd content: Put right answer inside << … >> (equivalent <gap> … <\/gap>). Example: <<3.14>> <<sometext>> use helper functions ?gap_numeric ?gap_text (see details ) default, 1 point can reached gap (specify points needs). total number points completing task defined sum points gaps. Note example, feedback section also provided. feedback optional, usually good idea give explanation students. gap exercises feedback refers whole task, specific gap. Group feedback appropriate sections, can opened/closed better user experience (use details summary html tags).","code":"--- type: gap knit: qti::render_qtijs ---  ```{r, preparation} library(qti) ```  ```{r, data} iq <- round(rnorm(10, 100, 15)) mean_iq <- mean(iq) ```  # question  ## numeric gaps  IQ Tests are standardized to have a mean value of <<100>>.  You conducted an IQ test for 10 persons and found the following values:   `r iq`  What is the mean value of these IQ values? `r gap_numeric(mean(iq))`  The same question, but now with a tolerance of +-5: `r gap_numeric(mean(iq), tolerance = 5)`  The same question, but now with a relative tolerance of +-5%: `r gap_numeric(mean(iq), tolerance = 5, tolerance_type = \"absolute\")`  In the last gap, the tolerance was set to 5, meaning that the solution+-5 is treated as correct. The parameter `tolerance_type` determines how the tolerance is calculated. Setting it to `relative`, would make the interval go from solution+-5% of the solution.  ## text gaps  The original IQ test was developed by `r gap_text(c(\"Alfred Binet\", \"Binet\", \"A. Binet\"))` in the early 20th century with the intention of identifying students who might need extra assistance. Over the years, IQ tests have evolved, and various versions exist today, such as the WAIS, standing for `r gap_text(\"Wechsler\", case_sensitive = F, tolerance = 2)` Adult Intelligence Scale, and the <<Stanford>>-Binet Intelligence Scales.  Please be advised that OPAL has introduced a new attribute for text gaps—`tolerance`—which now accommodates considerations for spelling errors. It is crucial to restrict the use of this attribute to the OPAL Learning Management System (LMS), as it may not be compatible with other Learning Management Systems. Furthermore, it is important to note that employing this attribute will result in the XML files being rendered invalid according to the QTI standard.  # feedback  1. IQ Tests are standardized to have a mean of 100. 1. The correct mean value for `r iq` is `r mean_iq`. 1. The original IQ test was developed by Alfred Binet. 1. WAIS: W stands for Wechsler 1. It is the Stanford-Binet Intelligence Scales."},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Gap Exercises","text":"want fine-grained control, consider RMD template QTI: gap (complex), wich uses yaml attributes complex calls helper functions. Opal renders : Preview gap exercise LMS OPAL","code":"--- type: gap # type of exercise knit: qti::render_qtijs # if you do not want our preview renderer, remove this identifier: TOPIC1_Q001 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS ---  ```{r echo=F} library(qti) ```  # question  ## numeric gaps  The qti package has <<114>> tests. The test coverage of the package is `r gap_numeric(90, tolerance = 5, tolerance_type = \"relative\", points = 2, response_identifier = \"tstCov\", expected_length = 10, placeholder = \"digits only\")`%.  In the last gap, the tolerance was set to 5 and the correct solution to 90. This means that the interval from 85 to 95 is a correct response (90+-5). The parameter `tolerance_type` determines how the tolerance is calculated. Setting it to `relative`, would make the interval go from 0.855 to 0.945 (90+-5%). The `response_identifier` is useful for later data anlysis to uniquely identify all gaps of a single exercise. The paramter `expected_length` is somewhat unpredictable in different browsers. You will need to experiment a little bit and maybe create some wrappers around the gap functions.  ## text gaps  The qti package can access the API of the learning management system <<OPAL>> (by BPS). BPS stands for `r gap_text(c(\"Bildungsportal Sachsen\", \"Bildungs Portal Sachsen\"), tolerance = 4, case_sensitive = FALSE, placeholder = \"text without special characters\", expected_length = 25)`. OPAL allows a new attribute for text gaps (`tolerance`), which takes into account spelling mistakes. Only use it with the OPAL LMS as it is probably not supported on other LMS. Further note that using this attribute will make the xml files invalid regarding the QTI standard.  # feedback  For numeric gaps, the LMS will usually display the correct value inline, but you might still want to provide some detailed explanations here.  <!-- If you prefer specific feedback for correct and incorrect solution, delete the general feedback section and uncomment everything starting from the next line:  # feedback+  Nice. (Only displayed when the solution is correct.)  # feedback-  Try again. (Only displayed if the solution is not correct.) -->"},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Gap Exercises","text":"gap cloze.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Gap Exercises","text":"id exercise, useful later data analysis results. default file name. extensive data analysis later makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Gap Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"feedback","dir":"Articles","previous_headings":"yaml attributes","what":"Feedback","title":"Gap Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) # feedback+ (provided student reaches points) # feedback- (provided student reach points)","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"gapnumeric","dir":"Articles","previous_headings":"yaml attributes","what":"Helper function gap_numeric","title":"Gap Exercises","text":"helper function designed generate formatted string describing gap Rmd content, answer numeric type: can see, also use yaml end, users convenient specific R function instead. Argument list gap_numeric:","code":"gap1 <- gap_numeric(solution = 1.4, tolerance = 10, tolerance_type = \"relative\",                     points = 5, response_identifier = \"mean_value\",                     include_lower_bound = TRUE, include_upper_bound = TRUE,                     expected_length = 10, placeholder = \"put mean value here\") cat(gap1) <gap>{solution: [1.4], tolerance: 10.0, tolerance_type: relative, points: 5.0, response_identifier: mean_value, include_lower_bound: yes, include_upper_bound: yes, expected_length: 10.0, placeholder: put mean value here, type: numeric}<\/gap>"},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"solution","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"solution","title":"Gap Exercises","text":"Correct numeric answer.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"tolerance","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"tolerance","title":"Gap Exercises","text":"Determines boundaries values within answer considered correct.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"tolerance_type","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"tolerance_type","title":"Gap Exercises","text":"Determines tolerance calculated. solution = 50 tolerance 10: setting tolreance_type relative, make interval correct answser go 45 55 (50+-10%) setting absolute, produces interval 40 60 (50+-10)","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"points","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"points","title":"Gap Exercises","text":"number points gap. Default 1.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"response_identifier","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"response_identifier","title":"Gap Exercises","text":"ID gap, useful later data analysis. default format “response_1”, “response_2”. extensive data analysis later , makes sense specify meaningful identifier.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"include_lower_bound","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"include_lower_bound","title":"Gap Exercises","text":"Specifies whether lower bound included tolerance interval","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"inclue_upper_bound","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"inclue_upper_bound","title":"Gap Exercises","text":"Specifies whether upper bound included tolerance interval","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"expected_length","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"expected_length","title":"Gap Exercises","text":"Sets size text input field content delivery engine. value assigned directly, calculated according number symbols solution value. browsers display inconsistently, tried create sensible defaults.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"placeholder","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_numeric","what":"placeholder","title":"Gap Exercises","text":"Text displayed gap, answer attempted. Can used hints (e.g. numbers ).","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"gaptext","dir":"Articles","previous_headings":"yaml attributes","what":"Helper function gap_text","title":"Gap Exercises","text":"helper function designed generate formatted string describing gap Rmd content, answer string/character: Argument list gap_text:","code":"gap2 <- gap_text(gap_text(c(\"Bildungsportal Sachsen\", \"Bildungs Portal Sachsen\"), tolerance = 4, case_sensitive = FALSE, placeholder = \"text without special characters\", expected_length = 25)) cat(gap2) <gap>{solution: [<gap>{solution: [Bildungsportal Sachsen,Bildungs Portal Sachsen], tolerance:,   4.0, case_sensitive: no, points: 1.0, expected_length: 25.0, placeholder: text without,   special characters, type: text_opal}<\/gap>], case_sensitive: no, points: 1.0, expected_length: 205.0, type: text}<\/gap>"},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"solution-1","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_text","what":"solution","title":"Gap Exercises","text":"Determines string vector values considered correct answers.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"tolerance-works-only-in-lms-opal","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_text","what":"tolerance (works only in LMS OPAL)","title":"Gap Exercises","text":"Defines many characters taken account tolerate spelling mistakes.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"case_sensitive-works-only-in-lms-opal","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_text","what":"case_sensitive (works only in LMS OPAL)","title":"Gap Exercises","text":"Determines whether evaluation correct answer case sensitive. Default FALSE.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"points-1","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_text","what":"points","title":"Gap Exercises","text":"number points gap. Default 1.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"response_identifier-1","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_text","what":"response_identifier","title":"Gap Exercises","text":"ID gap, useful later data analysis. default format “response_1”, “response_2”. extensive data analysis later , makes sense specify meaningful identifier.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"expected_length-1","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_text","what":"expected_length","title":"Gap Exercises","text":"Sets size text input field content delivery engine. value assigned directly, calculated according number symbols solution value. browsers display inconsistently, tried create sensible defaults.","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"placeholder-1","dir":"Articles","previous_headings":"yaml attributes > Helper function gap_text","what":"placeholder","title":"Gap Exercises","text":"Text displayed gap, answer attempted. Can used hints (e.g. numbers ).","code":""},{"path":"https://shevandrin.github.io/qti/articles/gap.html","id":"some-advice-on-gap-exercises","dir":"Articles","previous_headings":"yaml attributes","what":"Some advice on gap exercises","title":"Gap Exercises","text":"much wrong gap exercises. perfect reduce guessing often reasonably high difficulty. Numeric exercises usually involve calculations often guessed . Text gaps difficult create, can provide several alternative solutions Opal can even take account spelling mistakes. Obviously, can also make bad gap exercises, mindful. Another hint: want combine single choice questions gaps one exercise, simply use numeric gap single choice questions provide solutions question. instance, ____ (0 = significant, 1 = significant). way, can use gaps questions. flexible.","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Multiple Choice Exercises","text":"template available RStudio click New file -> R Markdown -> Template. qti templates start QTI:. look templates QTI: multiplechoice (simple) QTI: multiplechoice (complex). minimum need provide type: mpc (equivalent type: multiplechoice type: mchoice) yaml-section list least two elements section called # question: Note example, feedback section also provided. optional, usually good idea give explanation students. note knit parameter set custom qti knit function, handle preview. Clicking Knit button RStudio produces following viewer pane (browser choice):  can also use opal (set , see: API Opal) render function (knit: qti::render_opal), produce following:  Multiple choice exercises essentially single choice exercises, except none several choices can correct. correct choices specified surrounding asterisks (markdown italic). need use italic choices, surround whole question <> <\/> tag, instead. Note default points \\(0.5n\\), \\(n\\) number choices. 4 choices, 2 points can reached. correct choice 0.5 points gained, incorrect 0.5 deducted. minimum number points 0 case.","code":"--- type: mpc knit: qti::render_qtijs ---  # question  Which exercise types are supported by the R package qti?  - *dropdown list* - programming language evaluation  # feedback  All basic types of QTI are supported, including dropdown list. More advanced exercises (as available in OPAL/ONYX) are not yet supported because they are LMS specific."},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Multiple Choice Exercises","text":"want fine-grained control, consider available attributes yaml section RMD template QTI:multiple-choice (complex). addition can also set feedback correct incorrect responses. renders Opal :","code":"--- type: multiplechoice # equivalent to mpc knit: qti::render_qtijs # if you do not want our preview renderer, remove this identifier: TOPIC2_Q001 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS shuffle: true # random order of choices orientation: vertical # OR horizontal points: 2 ---  # question  Which exercise types are supported by the R package qti?  - *match pair (pair several elements)* - *match tables (single choice or multiple choice tables)* - drawing - graphical match (drag selection to specific position)  # feedback  All basic types of QTI are supported. More advanced exercises (as available in OPAL/ONYX) are not yet supported because they are LMS specific."},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Multiple Choice Exercises","text":"multiplechoice mpc mchoice (compatible exams package).","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Multiple Choice Exercises","text":"id exercise, useful later data analysis results. default file name. extensive data analysis later , makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Multiple Choice Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"shuffle","dir":"Articles","previous_headings":"yaml attributes","what":"shuffle","title":"Multiple Choice Exercises","text":"true, randomizes order choices. Defaults true. rare occasions makes sense strict order choices (setting shuffle false).","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"orientation","dir":"Articles","previous_headings":"yaml attributes","what":"orientation","title":"Multiple Choice Exercises","text":"items displayed vertical horizontal mode? Default vertical.","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"points","dir":"Articles","previous_headings":"yaml attributes","what":"points","title":"Multiple Choice Exercises","text":"many points given wholte exercise. Default number choices times 0.5. points \\(p\\) divided number choices \\(c\\) distributed choices. correct choice get student +\\(p/c\\), incorrect choice -\\(p/c\\). procedure, student always select answers get maximum number points. See also section advice multiple choice exercises.","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"feedback","dir":"Articles","previous_headings":"","what":"Feedback","title":"Multiple Choice Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) # feedback+ (provided student reaches points) # feedback- (provided student reach points)","code":""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"list-of-answers-as-a-variable","dir":"Articles","previous_headings":"","what":"List of answers as a variable","title":"Multiple Choice Exercises","text":"complex exercises list answers often just available variable. case can use helper function mdlist convert vector markdown list:","code":"mdlist(c(\"dropdown list\", \"programming language evaluation\", \"numeric gap\"),         solutions = c(1, 3)) [1] \"- *dropdown list*\\n- programming language evaluation\\n- *numeric gap*\""},{"path":"https://shevandrin.github.io/qti/articles/multiplechoice.html","id":"some-advice-on-multiple-choice-exercises","dir":"Articles","previous_headings":"","what":"Some advice on multiple choice exercises","title":"Multiple Choice Exercises","text":"multiple choice exercise can always transformed multiple single choice exercises choices true/false yes/. Thus, psychometric perspective types suffer problems. avoided possible. mainly guessing can never ruled . Psychometric properties usually worse numeric string gap exercises similar content. situations forced choice exercises entirely avoided. instance, presenting several statistical analyses asking student whether result statistically significant good exercise. Still, exercise multiple choice exercise better alternatives: single choice, dropdowns match tables. multiple choice exercise can always transformed several single choices dropdowns choices yes/. long multiple choice list rather inconvenient one use match table choices yes/instead. advantage exercise types student make selection. student make selection get points even though question even answered. Imagine multiple choice exercise choices incorrect. Without even attempting solve exercise, student get points. use multiple choice exercises balance yes/responses. single choices, dropdowns match tables, case. although support multiple choice exercises, advise strongly using .","code":""},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Order Exercises","text":"type exercise, candidate bring list items correct order. template available RStudio click New file -> R Markdown -> Template. qti templates start QTI:. look templates QTI: order (simple) QTI: order (complex). minimum need provide type: order yaml-section list least two elements section called #question: Knitting via Knit-Button qtijs, exercise renders :  Alternatively, change knit parameter knit: render_opal (see API Opal) upload Opal directly, producing:  order items Rmd-list considered correct one. Note example, feedback section provided. feedback optional, usually good idea give explanation students.","code":"--- type: order knit: qti::render_qtijs ---  # question  What is the structure of an exam in QTI terms, starting from the top (the exam) to the bottom (individual questions).  - test - section - item - interaction  # feedback  For oder exercises it is usually clear why the given order is correct, but you might still want to provide a detailed feedback."},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Order Exercises","text":"want fine-grained control, consider Rmd template QTI: order (complex), wich uses yaml attributes. Opal renders :","code":"--- type: order knit: qti::render_qtijs identifier: TOPIC1_Q001 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS points_per_answer: false # defines the scoring method, `false` means the completely correct order must be restored by the candidate in order to get points points: 2 ---  # question  What is the structure of an exam in QTI terms, starting from the top (the exam) to the bottom (individual questions).  - test - section - item - interaction  # feedback  For oder exercises it is usually clear why the given order is correct, but you might still want to provide a detailed feedback.  <!-- If you prefer specific feedback for correct and incorrect solution, delete the general feedback section and uncomment everything starting from this line:  # feedback+  Nice. (Only displayed when the solution is correct.)  # feedback-  Try again. (Only displayed if the solution is not correct.) -->"},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Order Exercises","text":"order.","code":""},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Order Exercises","text":"id exercise, useful later data analysis results. default file name. extensive data analysis later makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Order Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"points","dir":"Articles","previous_headings":"yaml attributes","what":"points","title":"Order Exercises","text":"many points given whole exercise. Default \\(0.25*n\\), \\(n\\) length list.","code":""},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"points_per_answer","dir":"Articles","previous_headings":"yaml attributes","what":"points_per_answer","title":"Order Exercises","text":"Defines scoring method. TRUE selected answer scored individually (according absolute position element list), FALSE whole task scored single mistake leads 0 points. Default TRUE.","code":""},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"feedback","dir":"Articles","previous_headings":"","what":"Feedback","title":"Order Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) # feedback+ (provided student reaches points) # feedback- (provided student reach points)","code":""},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"helpers","dir":"Articles","previous_headings":"","what":"helpers","title":"Order Exercises","text":"complex exercises list answers sometimes available variable. case can use helper function mdlist convert vector markdown list:","code":"order_list <- mdlist(c(\"Test\", \"Section\", \"Item\", \"Interaction\")) cat(order_list) - Test - Section - Item - Interaction"},{"path":"https://shevandrin.github.io/qti/articles/order.html","id":"some-advice-on-order-exercises","dir":"Articles","previous_headings":"","what":"Some advice on order exercises","title":"Order Exercises","text":"Usually, order exercises focusing aspect knowledge particularly important. Knowing steps procedures heart often useful. Even professionals checklist cheatsheet cases. Furthermore, grading order exercises can complicated absolute position item less important relative position.","code":""},{"path":"https://shevandrin.github.io/qti/articles/qti_oop_model.html","id":"how-to-create-task-objects","dir":"Articles","previous_headings":"","what":"How to create task objects","title":"QTI OOP Model","text":"two ways create task objects: call new using constructor functions (delivered soon)","code":""},{"path":"https://shevandrin.github.io/qti/articles/qti_oop_model.html","id":"examples-of-creating-task-objects","dir":"Articles","previous_headings":"","what":"Examples of creating task objects","title":"QTI OOP Model","text":"see full list slots call ?SingleChoice","code":"library(qti) # simple examples sc0 <- new(\"SingleChoice\",            identifier = \"sc0\",            choices = c(\"answer1\", \"answer2\", \"answer3\")) ord0 <- new(\"Order\",             identifier = \"ord0\",             choices = c(\"item1\", \"item2\", \"item3\")) # more advance example sc1 <- new(\"SingleChoice\",           choices = c(\"option 1\", \"option 2\", \"option 3\", \"option 4\"),           title = \"Single Choice Task\",           content = list(\"Pick up the right option\"),           points = 2,           identifier = \"sc_v0\",           feedback = c(new(\"WrongFeedback\", title = \"Error\",                                        content = list(\"You made a mistake\")),                           new(\"CorrectFeedback\", title = \"Success\",                                           content = list(\"Well done\")),                           new(\"ModalFeedback\", title = \"Common information\",                               content = list(\"Model answer of some details\"))))"},{"path":"https://shevandrin.github.io/qti/articles/qti_oop_model.html","id":"examples-of-creating-section-object","dir":"Articles","previous_headings":"","what":"Examples of creating section object","title":"QTI OOP Model","text":"","code":"# simple example section0 <- new(\"AssessmentSection\",                identifier = \"sect0\",                assessment_item = list(ord0)) # more advance example section1 <- new(\"AssessmentSection\",                identifier = \"sect1\",                title = \"First Section\",                time_limits = 20,                visible = FALSE,                assessment_item = list(sc0, sc1),                max_attempts = 2,                allow_comment = TRUE)"},{"path":"https://shevandrin.github.io/qti/articles/qti_oop_model.html","id":"examples-of-creating-test-object","dir":"Articles","previous_headings":"","what":"Examples of creating test object","title":"QTI OOP Model","text":"","code":"# simple example with a call to `new` test0 <- new(\"AssessmentTest\",                identifier = \"test\",                section= list(section0, section1)) # simple example using constructor `test()` test0 <- test(c(section0, section1), \"test\") # more advance example with a call to `new` test1 <- new(\"AssessmentTest\",              identifier = \"test\",              title = \"Test\",              navigation_mode = \"linear\",              section= list(section0, section1),              time_limits = 60,              max_attempts = 1,              allow_comment = TRUE) # more advance example using constructor `test()` test1 <- test(content = c(section0, section1),               identifier = \"test\",               title = \"Test\",                navigation_mode = \"linear\",                time_limits = 60,                max_attempts = 1,                allow_comment = TRUE)"},{"path":"https://shevandrin.github.io/qti/articles/section.html","id":"using-the-section-and-test-functions","dir":"Articles","previous_headings":"","what":"Using the section and test functions","title":"Sections and Tests","text":"Although possible feed test exercises directly, suggest always use section, provides flexibility avoids several problems. Even need section, can just create root section put exercises . designed simple wrapper sections. load files package use function section create section. Note request 10 different variants exercises. Now can make test upload Opal. helpers : test test4opal. test general always consistent QTI model, whereas test4opal can use additional Opal-specific parameters necessarily consistent QTI. now 10 variants test, two look like :  root section can see section exam_8833 (image 1) exam_S7829 (image 2). actually 8 (10 total) restart exam, get one randomly assigned. can try : https://bildungsportal.sachsen.de/opal/auth/RepositoryEntry/42069852163. summarize far: can just pass exercise files content parameter section define many variants like create file. course, creating several variants makes sense random exercises. Single choice multiple choice exercises part different sections: Note use list . Now can make test upload Opal: Opal create following structure:  can see, still variable section different variants (see two images). now, also fixed section tests. Note function section returns AssessmentSection qti-object: Indeed, whole qti-package based S4 OOP, exercises, sections tests objects. experience OOP, might feel little bit unfamiliar, use , need know details. Just use helper functions fine. customize sections tests, check references: ?section ?test ?test4opal.","code":"path <- fs::path_package(\"exercises\", package = \"qti\") files <- paste0(path, \"/\", c(\"gap1.Rmd\", \"gap2.Rmd\")) root_section <- section(content = files, n_variants = 10) test <- qti:::test(root_section, \"test1\") # createQtiTest is a method of the OOP test class createQtiTest(test, zip_only = T) repo <- upload2opal(\"test1.zip\", open_in_browser = F) non_random_exercises <- paste0(path, \"/\", c(\"sc1.Rmd\", \"mpc1.Rmd\")) root_section = list(section(files, n_variants = 10),                      section(non_random_exercises)) test <- qti:::test4opal(root_section, \"test2\") createQtiTest(test, zip_only = T) repo <- upload2opal(\"test2.zip\", open_in_browser = F) lapply(root_section, class) #> [[1]] #> [1] \"AssessmentSection\" #> attr(,\"package\") #> [1] \"qti\" #>  #> [[2]] #> [1] \"AssessmentSection\" #> attr(,\"package\") #> [1] \"qti\""},{"path":"https://shevandrin.github.io/qti/articles/section.html","id":"two-approaches-for-different-variants-of-a-single-exercise","dir":"Articles","previous_headings":"","what":"Two approaches for different variants of a single exercise","title":"Sections and Tests","text":"default section function creates different variants exercise drawing different seeds creating subsections seeds. also different approach introduce randomness. Check following figure: Two approaches structuring exercise variants left-hand side four different subsections exercise files (different variants ) created. single participant, starting root section, randomly assigned one subsection. presented exercises subsection. default instructors happy setup exams. Basically, common experimental design. participants one subsection see exercises, also useful psychometric analysis. disadvantage two students know subsection, help . right-hand side exercise file subsection created, containing different variants exercise. participant goes section, assigned single variant section. obvious difference first approach many paths test. Indeed, 3 variants 4 files, \\(3^4 = 81\\) paths. particularly useful psychometric analysis lead problems. instance, carefully construct exercises, might differ substantially difficulty different variants. 81 possible paths, might particularly difficult others fairly easy. way know, path participants. advantage setup cheating becomes difficult paths two students likely differ. Still, advise use approach know , especially exams. “variant” (left scheme picture) use = \\\"variants\\\" “files” (right scheme) use = \\\"files\\\"","code":"root_section = section(content = files, n_variants = 3, by = \"files\")"},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Single Choice Exercises","text":"simplest exercise type qti package single choice. template available RStudio click New file -> R Markdown -> Template. qti templates start QTI. look templates QTI: singlechoice (simple) QTI: singlechoice (complex). minimum need provide type: sc (equivalent type: singlechoice) yaml-section list least two elements section called # question: Note example, feedback section also provided. optional, usually good idea give explanation students. note knit parameter set custom qti function, handle preview. necessarily required, simplifies workflow substantially. leave , default preview just html file. add knit function, get realistic preview. see final result might look like learning management system can just click Knit button RStudio. produce qti xml file render viewer pane via QTIJS (can also just fire displayed server url browser). Preview single choice exercise rendered QTIJS corresponding xml file created folder Rmd file click Knit-Button. learning management systems can directly import QTI-xml-file, need upload generated file. Compositions exercises covered article: sections tests. happen use OPAL/ONYX, can also upload exercises knit parameter directly: upload file open browser opal url. look like :  Setting OPAL requires additional steps, covered article: Setting OPAL. default rights uploaded material OPAL set public, authentication required view material. Otherwise login OPAL, log API. Please take account testing material. Without changing defaults anyone link access questions.","code":"--- type: sc knit: qti::render_qtijs ---  # question  Which version of the QTI standard is used by the R package qti?  - 2.1 - 1.2 - 3.0 - 2.2  # feedback  The used qti version is 2.1. knit: render_opal"},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"syntax-explained","dir":"Articles","previous_headings":"","what":"Syntax explained","title":"Single Choice Exercises","text":"Let us closer look input file. Note necessarily need specify list element correct. first one treated correct one, useful shortcut. communicate collaborators, also much easier read. need look anywhere else file checking correct answer. course can specify correct choice need . preferred way putting asterisks around option: , much easier read providing solution somewhere else (e.g. yaml section). Furthermore, producing preview html directly shows element correct. important note: forget put blank line question answer list, otherwise list proper list: Renders : question text separated blank line - 1.2 - 2.1 - 3.0 - 2.2","code":"--- type: sc knit: qti::render_qtijs ---  # question  Which version of the QTI standard is used by the R package qti?  - 2.1 - 1.2 - 3.0 - 2.2  # feedback  The used qti version is 2.1. --- type: sc knit: qti::render_qtijs ---  # question  Which version of the QTI standard is used by the R package qti?  - 1.2 - *2.1* - 3.0 - 2.2 A question text that is not separated by a blank line - 1.2 - 2.1 - 3.0 - 2.2"},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Single Choice Exercises","text":"want fine-grained control, consider RMD template QTI: singlechoice-complex, wich uses many yaml attributes. addition can also set feedback correct incorrect responses. renders OPAL :  Let us now discuss yaml attributes can used","code":"--- type: sc # equivalent to singlechoice and schoice knit: qti::render_qtijs # if you do not want our preview renderer, remove this identifier: TOPIC1_Q001 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS shuffle: false # random order of choices orientation: horizontal # OR horizontal points: 0.5 ---  # question  Which version of the QTI standard is used by the R package qti?  - 1.2 - *2.1* <!--Mark correct solution with asterisks--> - 2.2 - 3.0  # feedback+  Nice. (Only displayed when the solution is correct.)  # feedback-  Try again. (Only displayed if the solution is not correct.)  <!-- If you prefer general feedback, just use the the section # feedback and delete the other feedback sections-->"},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Single Choice Exercises","text":"singlechoice sc (shortcut singlechoice) schoice (compatible exams package)","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Single Choice Exercises","text":"id exercise, useful later data analysis results. default file name. extensive data analysis later , makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Single Choice Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"shuffle","dir":"Articles","previous_headings":"yaml attributes","what":"shuffle","title":"Single Choice Exercises","text":"true (default), randomizes order choices. rare occasions makes sense strict order choices (setting shuffle false).","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"orientation","dir":"Articles","previous_headings":"yaml attributes","what":"orientation","title":"Single Choice Exercises","text":"items displayed vertical horizontal mode? Default vertical.","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"points","dir":"Articles","previous_headings":"yaml attributes","what":"points","title":"Single Choice Exercises","text":"many points given correct solution. Default 1.","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"calculator","dir":"Articles","previous_headings":"yaml attributes","what":"calculator","title":"Single Choice Exercises","text":"calculator required task, need assign ‘calculator’ attribute type ‘simple’ ‘scientific’. works OPAL.","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"files","dir":"Articles","previous_headings":"yaml attributes","what":"files","title":"Single Choice Exercises","text":"additional files required complete task, need assign ‘files’ attribute single file path list paths files. works OPAL.","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"feedback","dir":"Articles","previous_headings":"","what":"Feedback","title":"Single Choice Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) # feedback+ (provided student reaches points) # feedback- (provided student reach points) generally fans conditional feedback. Usually, better present whole solution group chunks can opened closed (e.g. html-element details summary).","code":""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"list-of-answers-as-a-variable","dir":"Articles","previous_headings":"","what":"List of answers as a variable","title":"Single Choice Exercises","text":"complex exercises list answers often just available variable. case can use helper function mdlist convert vector markdown list:","code":"mdlist(c(1.2, 2.1, 2.2, 3.0), solutions = 2) [1] \"- 1.2\\n- *2.1*\\n- 2.2\\n- 3\""},{"path":"https://shevandrin.github.io/qti/articles/singlechoice.html","id":"some-advice-on-single-choice-exercises","dir":"Articles","previous_headings":"","what":"Some advice on single choice exercises","title":"Single Choice Exercises","text":"psychometric perspective single choice exercises worst option ability assessment. mainly guessing can never ruled . Psychometric properties usually worse gap exercises similar content. exams package see many examples numeric gaps transformed single choice exercises. opinion, makes sense learning management system support gap exercises, support poor print exam automatic grading strict requirement. Otherwise, exercises better numeric (string) gaps. situations single choice exercises avoided. instance, exercises regarding level measurement five choices (nominal, ordinal, interval, ratio, absolute). case recommend ask several questions, just one. Also, might want give less points single choice exercises general reduce variance caused guessing. several single choice exercises answer options stay , consider using match table instead: Match Tables summary, try avoid single choice exercises. Specifically, transform numeric gap exercises single choice exercises, unless good reason. avoid single choice exercises, ask several questions (match table), just one. Consider giving less weight single choice exercises grading.","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"minimum-version","dir":"Articles","previous_headings":"","what":"Minimum version","title":"Table Exercises","text":"type exercise, candidate must match rows columns table. template available RStudio click New file -> R Markdown -> Template. qti templates start QTI:. look templates QTI: table (simple) QTI: table (complex). minimum need provide type: table yaml-section table section called #question: Clicking Knit-Button produce: Preview table exercise rendered QTIJS Alternatively, change knit parameter knit: qti::render_opal (see API Opal) upload opal directly, producing:  table entries Rmd-file contain number points response. number 0 considered correct. can also use negative numbers, reduce points reached, never 0. number correct responses per row column can specified needed. usually effect presentation table. instance, special tables one row per column correct one column per row correct. qti package takes care automatically, need anything. regard important know create table actually directed pair, transformed directed pair exercise. want , use as_table = true yaml-section. overall points exercise calculated sum positive table entries. course can also just load csv print markdown table via knitr::kable(yourtable). Just forget table last element question section. Note example, feedback section also provided. feedback optional, usually good idea give explanation students.","code":"--- type: table knit: qti::render_qtijs ---  # question  Specify any kind of table with the table entries representing the number of points for the response. The table has to be the last element of the question section!  The `qti` package is clever enough to transform your table into the appropriate QTI object (single choice, multiple choice, directed pair). Of course you can also just load a csv and print it as a markdown table via `knitr::kable(yourtable)`  Use visual editing mode in RStudio to quickly change your table.  |      |27|36 |25| 6 | |------|--|---|--|---| |4*9 = |0 |0.5|0 | 0 | |3*9 = |1 |0  |0 | 0 | |5*5 = |0 |0  |1 | 0 | |2*3 = |0 |0  |0 | 1 | |12*3 =|0 |1  |0 | 0 |  # feedback  Provide your feedback here. For tables it is difficult to provide useful feedback because there are usually many questions. But most learning management systems will at least show which answers are correct and incorrect."},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"more-control","dir":"Articles","previous_headings":"","what":"More control","title":"Table Exercises","text":"want fine-grained control, consider Rmd template QTI: table (complex), wich uses yaml attributes. renders : Preview table exercise LMS OPAL","code":"--- type: table knit: qti::render_qtijs identifier: TOPIC1_Q001 # think twice about this id for later data analysis! title: A meaningful title that can be displayed in the LMS rows_shuffle: false cols_shuffle: true abbr_id: true ---  # question  Specify any kind of table with the table entries representing the number of points for the response. The table has to be the last element of the question section!  The `qti` package is clever enough to transform your table into the appropriate QTI object (single choice or multiple choice). Of course you can also just load a csv and print it as a markdown table via `knitr::kable(yourtable)`  Use visual editing mode in RStudio to quickly change your table.  |      |27|36 |25| 6 | |------|--|---|--|---| |4*9 = |0 |0.5|0 | 0 | |3*9 = |1 |0  |0 | 0 | |5*5 = |0 |0  |1 | 0 | |2*3 = |0 |0  |0 | 1 | |12*3 =|0 |1  |0 | 0 |   # feedback  Provide your feedback here. For tables it is difficult to provide useful feedback because there are usually many questions. But most learning management systems will at least show which answers are correct and incorrect."},{"path":[]},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"type","dir":"Articles","previous_headings":"yaml attributes","what":"type","title":"Table Exercises","text":"table match.","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"identifier","dir":"Articles","previous_headings":"yaml attributes","what":"identifier","title":"Table Exercises","text":"ID exercise, useful later data analysis results. default file name. extensive data analysis later makes sense specify meaningful identifier. cases, file name fine.","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"title","dir":"Articles","previous_headings":"yaml attributes","what":"title","title":"Table Exercises","text":"Title exercise. Can displayed students depending learning management system settings. Default file name.","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"shuffle","dir":"Articles","previous_headings":"yaml attributes","what":"shuffle","title":"Table Exercises","text":"true (default), randomizes order rows columns. rare occasions makes sense strict order elements (setting shuffle false).","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"rows_shuffle","dir":"Articles","previous_headings":"yaml attributes","what":"rows_shuffle","title":"Table Exercises","text":"shuffle rows. Default true.","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"cols_shuffle","dir":"Articles","previous_headings":"yaml attributes","what":"cols_shuffle","title":"Table Exercises","text":"shuffle columns. Default true.","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"abbr_id","dir":"Articles","previous_headings":"yaml attributes","what":"abbr_id","title":"Table Exercises","text":"Defines use abbreviation way generate row column identifiers. See rows colums identifiers .","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"feedback","dir":"Articles","previous_headings":"yaml attributes","what":"Feedback","title":"Table Exercises","text":"Feedback can provided section # feedback (general feedback, displayed every time, without conditions) # feedback+ (provided student reaches points) # feedback- (provided student reach points)","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"ids","dir":"Articles","previous_headings":"yaml attributes","what":"Managing identifiers","title":"Table Exercises","text":"identifiers rows columns useful later data analysis results. extensive data analysis later , makes sense specify meaningful identifiers, least make recognizable. 3 ways form identifiers rows columns: default qti uses row_1…row_N, col_1…col_N. Using abbr_id: true yaml section Rmd file, qti takes first word row column element combines abbreviation remaining text element. Example: element “Mean Value Theorem Integrals” qti makes identifier “Mean_VTfI”. mor control, probably want assign values identifiers. case, markdown table csv file need put: column predefined header ‘rowid’ values row identifiers. row predefined ‘colid’ header values columns identifies. Preview markdown table data identifiers","code":""},{"path":"https://shevandrin.github.io/qti/articles/table.html","id":"some-advice-on-table-exercises","dir":"Articles","previous_headings":"yaml attributes","what":"Some advice on table exercises","title":"Table Exercises","text":"Table exercises forced choice exercises, suffer sample problems single choice multiple choice exercises. advantage table exercises easy manage (e.g. csv-tables) many questions can asked , using little space.","code":""},{"path":"https://shevandrin.github.io/qti/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrey Shevandrin. Author, maintainer. Petr Bondarenko. Contributor. Ivonne Ojeda. Contributor. Johannes Titz. Author. Brian Mottershead. Copyright holder.            Author QTIJS library Stiftung für Innovation der Hochschullehre. Funder.","code":""},{"path":"https://shevandrin.github.io/qti/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shevandrin , Titz J (2024). qti: Create Tests R According QTI 2.1 Standard. R package version 0.0.0.9000, https://shevandrin.github.io/qti/, https://github.com/shevandrin/qti.","code":"@Manual{,   title = {qti: Create Tests in R According To QTI 2.1 Standard},   author = {Andrey Shevandrin and Johannes Titz},   year = {2024},   note = {R package version 0.0.0.9000, https://shevandrin.github.io/qti/},   url = {https://github.com/shevandrin/qti}, }"},{"path":"https://shevandrin.github.io/qti/index.html","id":"qti","dir":"","previous_headings":"","what":"Create Tests in R According To QTI 2.1 Standard","title":"Create Tests in R According To QTI 2.1 Standard","text":"Note: work progress, stable release can expected Q4 2023. goal qti provide clean independent R library creating exercises exams according QTI standard directly R. can render exercises locally (qtijs) learning management system Opal.","code":""},{"path":"https://shevandrin.github.io/qti/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Tests in R According To QTI 2.1 Standard","text":"qti package still development. way install moment GitHub: Note start qtijs server, used previewing exercises. need , turn environment variable: QTI_AUTOSTART_SERVER=FALSE (.Rprofile .Renviron).","code":"#install.pacakges(\"librarian\") # install librarian if you do not have it yet librarian::shelf(shevandrin/qti)"},{"path":"https://shevandrin.github.io/qti/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Create Tests in R According To QTI 2.1 Standard","text":"Using RStudio, create new Rmarkdown file, select Template choose one templates starting QTI: …. simple ones include minimum, complex ones parameters. Click Knit-Button see rendered exercise Viewer pane. templates self-explanatory, details exercise types can found articles: Single choice Multiple choice Essay Gap Dropdown Order Directed pairs Tables combine different exercises test, read: Sections Tests using learning management system Opal, please check Opal API","code":""},{"path":"https://shevandrin.github.io/qti/index.html","id":"general-workflow","dir":"","previous_headings":"","what":"General workflow","title":"Create Tests in R According To QTI 2.1 Standard","text":"basic workflow qti package can described follows: Create Rmd document. can start scratch (specify type yaml section) use Rmd templates starting prefix QTI. Write section titled # question create interactions (gaps, choices, etc.). Use qti helper functions needed. Set additional attributes yaml section. types explained detail Articles menu website (top). Choose previewer: Either qtijs (knit: qti::render_qtijs), render exercise locally learning management system Opal (knit: qti::render_opal). Note using Opal requires set first: Opal API. Check task looks desired. Modify satisfied. Create sections tests based exercise files. Write test (xml) disk according QTI standard upload test file learning management system. Download results data learning management system read qti package statistical analysis. step includes certain qti functions, useful shown following diagram: Basic workflow create exercises tests qti best way learn workflow create simple exercise, “Single Choice”, presented article. exercise type described separate article: Single choice Multiple choice Essay Gap Dropdown Order Directed pairs Tables","code":""},{"path":"https://shevandrin.github.io/qti/index.html","id":"feedback-and-bug-reports","dir":"","previous_headings":"","what":"Feedback and bug reports","title":"Create Tests in R According To QTI 2.1 Standard","text":"Feel free let us know features missing directly open issue GitHub.","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentItem-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class AssessmentItem — AssessmentItem-class","title":"Class AssessmentItem — AssessmentItem-class","text":"Abstract class AssessmentItem responsible creating root element 'assessmentItem' xml task description according QTI 2.1. class never generated, derived classes meaningful.","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentItem-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class AssessmentItem — AssessmentItem-class","text":"identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentItem-class.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Class AssessmentItem — AssessmentItem-class","text":"class useful , classes derive .","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentItemRef-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Element asssessmentItemRef for xml testdescription — AssessmentItemRef-class","title":"Element asssessmentItemRef for xml testdescription — AssessmentItemRef-class","text":"Element assessmentItemRef xml test description according QTI 2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentItemRef-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Element asssessmentItemRef for xml testdescription — AssessmentItemRef-class","text":"identifier question identifier within test href path xml file assessementItem (task)","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentSection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class AssessmentSection — AssessmentSection-class","title":"Class AssessmentSection — AssessmentSection-class","text":"Class AssessmentSection responsible forming section test xml specification according QTI 2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentSection-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class AssessmentSection — AssessmentSection-class","text":"identifier string; section identifier title string; title section time_limit numeric, optional;  controls amount time candidate allowed part test visible boolean, optional; TRUE shows section hierarchy test structure; default TRUE assessment_item list; list AssessmentSection /Assessemt item objects: SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair shuffle boolean, optional; responsible randomize order assessment items subsections initially presented candidate; default FALSE selection numeric, optional; defines many children section delivered test max_attempts numeric. optional; enables maximum number attempts, candidate allowed pass section allow_comment boolean, optional; enables allow candidate leave comments question section","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentSection-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class AssessmentSection — AssessmentSection-class","text":"","code":"sc1 <- new(\"SingleChoice\", prompt = \"Test task\", title = \"SC\",              identifier = \"q1\", choices = c(\"a\", \"b\", \"c\")) sc2 <- new(\"SingleChoice\", prompt = \"Test task\", title = \"SC\",              identifier = \"q2\", choices = c(\"A\", \"B\", \"C\")) sc3 <- new(\"SingleChoice\", prompt = \"Test task\", title = \"SC\",              identifier = \"q3\", choices = c(\"aa\", \"bb\", \"cc\")) exam_section <- new(\"AssessmentSection\", identifier = \"sec_id\",                    title = \"section\", assessment_item = list(sc1, sc2, sc3),                    selection = 2)"},{"path":"https://shevandrin.github.io/qti/reference/AssessmentTest-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class AssessmentTest — AssessmentTest-class","title":"Class AssessmentTest — AssessmentTest-class","text":"Abstract class AssessmentTest responsible creating xml exam file according QTI 2.1.","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentTest-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class AssessmentTest — AssessmentTest-class","text":"Test consists one sections. section can one questions/tasks /one sub sections.","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentTest-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class AssessmentTest — AssessmentTest-class","text":"identifier string; identifier xml test file title string; file title points numeric; maximum number points exam/test test_part_identifier string; identifier test part navigation_mode string, optional; determines general paths candidate may exam; two mode options possible: \"linear\" - candidate allowed return previous questions \"nonlinear\" - candidate free navigate, used default submission_mode string, optional; determines candidate's responses submitted response processing; two mode options possible: \"individual\" - submit candidates' responses item--idem basis, used default \"simultaneous - candidates' responses submitted together end test section list; list AssessmentSection objects qti_version string, optional; qti information model version, default 'v2p1' time_limit numeric, optional;  controls amount time minutes, candidate allowed part test max_attempts numeric, optional; enables maximum number attempts, candidate allowed pass allow_comment boolean, optional; enables allow candidate leave comments question rebuild_variables boolean, optional; enables recalculate variables reshuffle order choices item-attempt academic_grading boolean, optional; enables show candidate end testing grade according 5-point academic grade system feedback; FALSE default grade_label character, optional; short message shows grade final feedback; multilingual use, can named vector two-letter ISO language codes names (e.g., c(en=\"Grade\", de=\"Note\")); test creation, takes value language operating system; c(en=\"Grade\", de=\"Note\")default table_label character, optional; concise message display column title grading table final feedback; multilingual use, can named vector two-letter ISO language codes names (e.g., c(en=\"Grade\", de=\"Note\")); test creation, takes value language operating system; c(en=\"Grade\", de=\"Note\")default","code":""},{"path":[]},{"path":[]},{"path":"https://shevandrin.github.io/qti/reference/AssessmentTestOpal-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class AssessmentTestOpal responsible creating xml exam file according QTI 2.1. LMS Opal","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentTestOpal-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class ","text":"Test consists one sections. section can one questions/tasks /one sub sections.","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentTestOpal-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"identifier string; identifier xml test file title string; file title points numeric; maximum number points exam/test test_part_identifier string; identifier test part navigation_mode string, optional; determines general paths candidate may exam; two mode options possible: \"linear\" - candidate allowed return previous questions \"nonlinear\" - candidate free navigate, used default submission_mode string, optional; determines candidate's responses submitted response processing; two mode options possible: \"individual\" - submit candidates' responses item--idem basis, used default \"simultaneous - candidates' responses submitted together end test section list; list AssessmentSection objects qti_version string, optional; qti information model version, default 'v2p1' time_limit numeric, optional;  controls amount time minutes, candidate allowed part test max_attempts numeric, optional; enables maximum number attempts, candidate allowed pass allow_comment boolean, optional; enables allow candidate leave comments question rebuild_variables boolean, optional; enables recalculate variables reshuffle order choices item-attempt academic_grading boolean, optional; enables show candidate end testing grade according 5-point academic grade system feedback; FALSE default grade_label character, optional; short message shows grade final feedback; multilingual use, can named vector two-letter ISO language codes names (e.g., c(en=\"Grade\", de=\"Note\")); test creation, takes value language operating system; c(en=\"Grade\", de=\"Note\")default table_label character, optional; concise message display column title grading table final feedback; multilingual use, can named vector two-letter ISO language codes names (e.g., c(en=\"Grade\", de=\"Note\")); test creation, takes value language operating system; c(en=\"Grade\", de=\"Note\")default show_test_time boolean, optional; determines show candidate elapsed processing time without time limit; default 'FALSE' calculator string, optional; determines show candidate calculator; possible values: \"simple-calculator\" \"scientific-calculator\" \"\" - default mark_items boolean, optional; determines allow candidate marking questions, default 'TRUE' keep_responses boolean, optional; determines save candidate's answers previous attempt files string vector, optional; paths files, accessible candidate test/exam","code":""},{"path":"https://shevandrin.github.io/qti/reference/AssessmentTestOpal-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_test() create xml file test specification","code":""},{"path":[]},{"path":[]},{"path":"https://shevandrin.github.io/qti/reference/Choice-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class Choice never generated, derived classes SingleChoice MultipleChoice meaningful.","code":""},{"path":"https://shevandrin.github.io/qti/reference/Choice-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"choices string vector; defines set answers options question shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE choice_identifiers string vector, optional; set identifiers answers; default identifiers generated automatically orientation string, optional; responsible place answers vertical horizontal mode; possible values: \"vertical\" - default \"horizontal\"","code":""},{"path":"https://shevandrin.github.io/qti/reference/Choice-class.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Class ","text":"class useful , classes derive .","code":""},{"path":"https://shevandrin.github.io/qti/reference/CorrectFeedback-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class CorrectFeedback — CorrectFeedback-class","title":"Class CorrectFeedback — CorrectFeedback-class","text":"Abstract class CorrectFeedback responsible deliver feedback messages candidate case correct answer whole exercise","code":""},{"path":"https://shevandrin.github.io/qti/reference/CorrectFeedback-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class CorrectFeedback — CorrectFeedback-class","text":"outcome_identifier string; identifier outcome declaration variable relates feedback show boolean, optional; responsible show (TRUE value) hide (FALSE); default TRUE identifier string; identifier model feedback item; default 'modal feedback' title string, optional; title model feedback item content list; list strings formatting form text question","code":""},{"path":"https://shevandrin.github.io/qti/reference/DirectedPair-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class DirectedPair responsible creating assessment task according QTI 2.1., candidate make binary associations answer options","code":""},{"path":"https://shevandrin.github.io/qti/reference/DirectedPair-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate rows string vector; sets answer options row names table firsts elements couples directed pairs rows_identifiers string vector; sets identifiers answer options defined rows table identifiers firsts elements couples directed pairs cols string vector; sets answer options cols headers table seconds elements couples directed pairs cols_identifiers string vector; sets identifiers answer options defined cols table identifiers seconds elements couples directed pairs answers_identifiers string vector; sets couples identifiers combine right answers answers_scores numeric vector, optional; number vector determines number points awarded candidate selects corresponding answer; nothing assign answers_scores, individual values right answers calculates task points number right options shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE shuffle_rows boolean, optional; randomize order choices rows; default TRUE shuffle_cols boolean, optional; randomize order choices columns; default TRUE points numeric, optional; number points entire task; default 1 orientation string, optional; responsible place answers vertical horizontal mode; possible values: \"vertical\" - default \"horizontal\"","code":""},{"path":"https://shevandrin.github.io/qti/reference/DirectedPair-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/DirectedPair-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"dp <- new(\"DirectedPair\", content = list(\"<p>\\\"Directed pairs\\\" task<\/p>\"),           rows = c(\"row1\", \"row2\", \"row3\"),           rows_identifiers = c(\"a\", \"b\", \"c\"),           cols = c(\"alfa\", \"beta\", \"gamma\"),           cols_identifiers = c(\"k\", \"l\", \"m\"),           answers_identifiers = c(\"a k\", \"b l\", 'c m'),           points = 5,           title = \"directed_pair\",           identifier = \"directed_pair_example\")"},{"path":"https://shevandrin.github.io/qti/reference/Entry-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class Entry responsible creating assessment task according QTI 2.1., question includes one instances text input fields (numeric text answers) dropdown lists.","code":""},{"path":"https://shevandrin.github.io/qti/reference/Entry-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list content form text question, includes text (characters) instances Gap-objects: TextGap, NumericGap, InlineChoice identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate points numeric, optional; number points entire task; default 1","code":""},{"path":"https://shevandrin.github.io/qti/reference/Entry-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/Entry-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"entry_gaps <- new(\"Entry\", content = list(\"<p>In mathematics, the common logarithm is the logarithm with base\", new(\"NumericGap\",                                            response_identifier = \"numeric_1\",                                            solution = 10,                                            placeholder = \"it is a number\"), \". It is also known as the decimal\", new(\"TextGap\",                                          response_identifier = \"text_1\",                                          solution = \"logarithm\",                                          placeholder = \"it is a text\"),  \".<\/p>\"),                    title = \"entry with number and text in answers\",                    identifier = \"entry_example\") entry_dropdown <- new(\"Entry\", content = list(\"<p>In mathematics, the common logarithm is the logarithm with base\", new(\"InlineChoice\",                                            response_identifier = \"numeric_1\",                                            choices = c(\"10\", \"7\", \"11\")), \". It is also known as the decimal\", new(\"InlineChoice\",                                          response_identifier = \"text_1\",                                          choices = c(\"logarithm\", \"limit\")),  \".<\/p>\"),                    title = \"entry with dropdown lists for answers\",                    identifier = \"entry_example\")"},{"path":"https://shevandrin.github.io/qti/reference/Essay-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class Essay responsible creating essay type assessment task according QTI 2.1.","code":""},{"path":"https://shevandrin.github.io/qti/reference/Essay-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate expected_length numeric, optional; responsible set size text input field content delivery engine expected_lines numeric, optional; responsible set number rows text input field content delivery engine words_max numeric, optional; responsible set max number words candidate can write text input field words_min numeric, optional; responsible set min number words candidate write text input field data_allow_paste boolean, optional; determines whether possible candidate copy text text input field; default FALSE points numeric, optional; number points entire task; default 1","code":""},{"path":"https://shevandrin.github.io/qti/reference/Essay-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/Essay-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"es <- new(\"Essay\", content = list(\"<p>Develop some idea and write it down in                                   the text field<\/p>\"),           title = \"essay_example\",           words_max = 100,           points = 3)"},{"path":"https://shevandrin.github.io/qti/reference/Gap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class Gap never generated, derived classes TextGap, NumericGap InlineChoice meaningful.","code":""},{"path":"https://shevandrin.github.io/qti/reference/Gap-class.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Class ","text":"class useful , classes derive .","code":""},{"path":"https://shevandrin.github.io/qti/reference/InlineChoice-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class InlineChoice — InlineChoice-class","title":"Class InlineChoice — InlineChoice-class","text":"Abstract class InlineChoice responsible creating instances dropdown lists answer options question Entry type assessment task according QTI 2.1.","code":""},{"path":"https://shevandrin.github.io/qti/reference/InlineChoice-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class InlineChoice — InlineChoice-class","text":"response_identifier string; identifier thy answer; default generated automatically points numeric, optional; number points gap; default 1 placeholder string, optional; responsible place helpful text text input field content delivery engine expected_length numeric, optional; responsible set size text input field content delivery engine choices string vector; contains answers shown drop list solution_index numeric, optional; index right answer options vector; default 1 choices_identifiers string vector, optional; set identifiers answers; default identifiers generated automatically shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE","code":""},{"path":"https://shevandrin.github.io/qti/reference/InlineChoice-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class InlineChoice — InlineChoice-class","text":"","code":"ng <- new(\"InlineChoice\",           choices =  c(\"answer1\", \"answer2\", \"answer3\"),           response_identifier = \"dropdown_gap_example\")"},{"path":"https://shevandrin.github.io/qti/reference/MatchTable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class MatchTable never generated, derived classes OneInRowTable, OneInColTable, MultipleChoiceTable DirectedPair meaningful.","code":""},{"path":"https://shevandrin.github.io/qti/reference/MatchTable-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"rows string vector; sets answer options row names table firsts elements couples directed pairs rows_identifiers string vector; sets identifiers answer options defined rows table identifiers firsts elements couples directed pairs cols string vector; sets answer options cols headers table seconds elements couples directed pairs cols_identifiers string vector; sets identifiers answer options defined cols table identifiers seconds elements couples directed pairs answers_identifiers string vector; sets couples identifiers combine right answers answers_scores numeric vector, optional; number vector determines number points awarded candidate selects corresponding answer; nothing assign answers_scores, individual values right answers calculates task points number right options shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE shuffle_rows boolean, optional; randomize order choices rows; default TRUE shuffle_cols boolean, optional; randomize order choices columns; default TRUE shuffle_rows boolean, optional; shuffle possible answers rows, default TRUE shuffle_cols boolean, optional; shuffle possible answers columns; defalut TRUE","code":""},{"path":"https://shevandrin.github.io/qti/reference/MatchTable-class.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Class ","text":"class useful , classes derive .","code":""},{"path":"https://shevandrin.github.io/qti/reference/ModalFeedback-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ModalFeedback — ModalFeedback-class","title":"Class ModalFeedback — ModalFeedback-class","text":"Abstract class ModalFeedback responsible delivering feedback messages candidate, regardless whether answer correct incorrect","code":""},{"path":"https://shevandrin.github.io/qti/reference/ModalFeedback-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ModalFeedback — ModalFeedback-class","text":"outcome_identifier string; identifier outcome declaration variable relates feedback show boolean, optional; responsible show (TRUE value) hide (FALSE); default TRUE identifier string; identifier model feedback item; default 'modal feedback' title string, optional; title model feedback item content list; list strings formatting form text question","code":""},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoice-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class MuiltipleChoice responsible creating multiple choice assessment task according QTI 2.1.","code":""},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoice-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate choices string vector; defines set answers options question shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE choice_identifiers string vector, optional; set identifiers answers; default identifiers generated automatically orientation string, optional; responsible place answers vertical horizontal mode; possible values: \"vertical\" - default \"horizontal\" points numeric vector, required; number vector determines number points awarded candidate selects corresponding answer; order scores must follow order choices; possible assign negative values incorrect answers; answers positive score considered correct","code":""},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoice-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoice-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"mc <- new(\"MultipleChoice\",           content = list(\"<p>Pick up the right options<\/p>\"),           choices = c(\"option 1\", \"option 2\", \"option 3\", \"option 4\"),           title = \"single_choice_task\",           shuffle = FALSE,           points = c(0.5, 0,5, 0, 0),           identifier = \"mc_example\")"},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoiceTable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class MultipleChoiceTable responsible creating assessment task according QTI 2.1. table answer options, many right answers row column possible","code":""},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoiceTable-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate rows string vector; sets answer options row names table firsts elements couples directed pairs rows_identifiers string vector; sets identifiers answer options defined rows table identifiers firsts elements couples directed pairs cols string vector; sets answer options cols headers table seconds elements couples directed pairs cols_identifiers string vector; sets identifiers answer options defined cols table identifiers seconds elements couples directed pairs answers_identifiers string vector; sets couples identifiers combine right answers answers_scores numeric vector, optional; number vector determines number points awarded candidate selects corresponding answer; nothing assign answers_scores, individual values right answers calculates task points number right options shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE shuffle_rows boolean, optional; randomize order choices rows; default TRUE shuffle_cols boolean, optional; randomize order choices columns; default TRUE mapping use; value initialize automatically; named numeric vector points, names possible collocations rows columns identifiers","code":""},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoiceTable-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/MultipleChoiceTable-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"mt <- new(\"MultipleChoiceTable\", content = list(\"<p>Match table task<\/p>\",                                                 \"<i>table description<\/i>\"),           rows = c(\"row1\", \"row2\", \"row3\"),           rows_identifiers = c(\"a\", \"b\", \"c\"),           cols = c(\"alfa\", \"beta\", \"gamma\"),           cols_identifiers = c(\"a\", \"b\", \"c\"),           answers_identifiers = c(\"a a\", \"b b\", \"b c\"),           points = 5,           title = \"multiple_choice_table\",           identifier = \"mc_table_example\")"},{"path":"https://shevandrin.github.io/qti/reference/NumericGap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class NumericGap — NumericGap-class","title":"Class NumericGap — NumericGap-class","text":"Abstract class NumericGap responsible creating instances input fields numeric type answer question Entry type assessment task according QTI 2.1.","code":""},{"path":"https://shevandrin.github.io/qti/reference/NumericGap-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class NumericGap — NumericGap-class","text":"response_identifier string; identifier thy answer; default generated automatically points numeric, optional; number points gap; default 1 placeholder string, optional; responsible place helpful text text input field content delivery engine expected_length numeric, optional; responsible set size text input field content delivery engine solution numeric; contains right answer numeric entry tolerance numeric, optional; specifies value low boundaries tolerance rate candidate answer; default 0 tolerance_type string, optional; specifies tolerance mode; possible values: \"exact\" \"absolute\" default \"relative\" include_lower_bound boolean, optional; specifies whether lower bound included tolerance rate include_upper_bound boolean, optional; specifies whether upper bound included tolerance rate","code":""},{"path":"https://shevandrin.github.io/qti/reference/NumericGap-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class NumericGap — NumericGap-class","text":"","code":"ng <- new(\"NumericGap\",           response_identifier = \"gap_1\",           solution = 5,           placeholder = \"use this format xx.xxx\" )"},{"path":"https://shevandrin.github.io/qti/reference/OneInColTable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class OneInColTable responsible creating assessment task according QTI 2.1. table answer options, one right answer colum possible","code":""},{"path":"https://shevandrin.github.io/qti/reference/OneInColTable-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate rows string vector; sets answer options row names table firsts elements couples directed pairs rows_identifiers string vector; sets identifiers answer options defined rows table identifiers firsts elements couples directed pairs cols string vector; sets answer options cols headers table seconds elements couples directed pairs cols_identifiers string vector; sets identifiers answer options defined cols table identifiers seconds elements couples directed pairs answers_identifiers string vector; sets couples identifiers combine right answers answers_scores numeric vector, optional; number vector determines number points awarded candidate selects corresponding answer; nothing assign answers_scores, individual values right answers calculates task points number right options shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE shuffle_rows boolean, optional; randomize order choices rows; default TRUE shuffle_cols boolean, optional; randomize order choices columns; default TRUE points numeric, optional; number points entire task; default 1","code":""},{"path":"https://shevandrin.github.io/qti/reference/OneInColTable-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/OneInColTable-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"mt <- new(\"OneInColTable\", content = list(\"<p>\\\"One in col\\\" table task<\/p>\",                                                 \"<i>table description<\/i>\"),           rows = c(\"row1\", \"row2\", \"row3\", \"row4\"),           rows_identifiers = c(\"a\", \"b\", \"c\", \"d\"),           cols = c(\"alfa\", \"beta\", \"gamma\"),           cols_identifiers = c(\"k\", \"l\", \"m\"),           answers_identifiers = c(\"a k\", \"d l\", 'd m'),           points = 5,           title = \"oneincol_choice_table\",           identifier = \"oneincol_table_example\")"},{"path":"https://shevandrin.github.io/qti/reference/OneInRowTable-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class OneInRowTable responsible creating assessment task according QTI 2.1. table answer options, one right answer row possible","code":""},{"path":"https://shevandrin.github.io/qti/reference/OneInRowTable-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate rows string vector; sets answer options row names table firsts elements couples directed pairs rows_identifiers string vector; sets identifiers answer options defined rows table identifiers firsts elements couples directed pairs cols string vector; sets answer options cols headers table seconds elements couples directed pairs cols_identifiers string vector; sets identifiers answer options defined cols table identifiers seconds elements couples directed pairs answers_identifiers string vector; sets couples identifiers combine right answers answers_scores numeric vector, optional; number vector determines number points awarded candidate selects corresponding answer; nothing assign answers_scores, individual values right answers calculates task points number right options shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE shuffle_rows boolean, optional; randomize order choices rows; default TRUE shuffle_cols boolean, optional; randomize order choices columns; default TRUE points numeric, optional; number points entire task; default 1","code":""},{"path":"https://shevandrin.github.io/qti/reference/OneInRowTable-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/OneInRowTable-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"mt <- new(\"OneInRowTable\", content = list(\"<p>\\\"One in row\\\" table task<\/p>\",                                                 \"<i>table description<\/i>\"),           rows = c(\"row1\", \"row2\", \"row3\", \"row4\"),           rows_identifiers = c(\"a\", \"b\", \"c\", \"d\"),           cols = c(\"alfa\", \"beta\", \"gamma\"),           cols_identifiers = c(\"k\", \"l\", \"m\"),           answers_identifiers = c(\"a k\", \"b l\", \"c l\", \"d m\"),           points = 5,           title = \"oneinrow_choice_table\",           identifier = \"oneinrow_table_example\")"},{"path":"https://shevandrin.github.io/qti/reference/Order-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class Order responsible creating assessment task according QTI 2.1., candidate place answers specific order","code":""},{"path":"https://shevandrin.github.io/qti/reference/Order-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate choices string vector; contains answers; order answers vector right response task choices_identifiers string vector, optional; set identifiers answers; default identifiers generated automatically shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE points_per_answer boolean, optional; case TRUE selected answer scored individually, case FALSE answer wich fully correct scored maximum score; TRUE default points numeric, optional; number points entire task; default 1","code":""},{"path":"https://shevandrin.github.io/qti/reference/Order-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/Order-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"ord <- new(\"Order\", content = list(\"<p>put in a right order<\/p>\"),            choices = c(\"first\", \"second\", \"third\"),            title = \"order\",            identifier = \"order_example\")"},{"path":"https://shevandrin.github.io/qti/reference/SingleChoice-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Abstract class SingleChoice responsible creating single choice assessment task according QTI 2.1.","code":""},{"path":"https://shevandrin.github.io/qti/reference/SingleChoice-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"content list; list strings formatting form text question identifier string; identifier assessment task title string; title xml file prompt string, optional; simple question text, consisting one paragraph, can supplement replace content qti_version string; QTI information model version; default 'v2p1 feedback list ModalFeedback, CorrectFeedback, WrongFeedback; feedback messages candidate choices string vector; defines set answers options question shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE choice_identifiers string vector, optional; set identifiers answers; default identifiers generated automatically orientation string, optional; responsible place answers vertical horizontal mode; possible values: \"vertical\" - default \"horizontal\" solution numeric, optional; number right answer choices slot, default first item choices slot considered right answer; default 1 points numeric, optional; number points entire task; default 1","code":""},{"path":"https://shevandrin.github.io/qti/reference/SingleChoice-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Class ","text":"use create_qti_task() create xml file task specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/SingleChoice-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"sc <- new(\"SingleChoice\",           content = list(\"<p>Pick up the right option<\/p>\"),           choices = c(\"option 1\", \"option 2\", \"option 3\", \"option 4\"),           title = \"single_choice_task\",           shuffle = FALSE,           points = 2,           identifier = \"sc_example\")"},{"path":"https://shevandrin.github.io/qti/reference/TextGap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class TextGap — TextGap-class","title":"Class TextGap — TextGap-class","text":"Abstract class TextGap responsible creating instances input fields text type answer question Entry type assessment task according QTI 2.1.","code":""},{"path":"https://shevandrin.github.io/qti/reference/TextGap-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class TextGap — TextGap-class","text":"response_identifier string; identifier thy answer; default generated automatically points numeric, optional; number points gap; default 1 placeholder string, optional; responsible place helpful text text input field content delivery engine expected_length numeric, optional; responsible set size text input field content delivery engine solution string; contains vector values considered correct answers case_sensitive logical; determines whether evaluation correct answer case sensitive; default FALSE","code":""},{"path":"https://shevandrin.github.io/qti/reference/TextGap-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class TextGap — TextGap-class","text":"","code":"tg <- new(\"TextGap\",           solution = c(\"answer\", \"answerr\", \"aanswer\"),           placeholder = \"do not put special characters\" ) #> Warning: There is no response_identifier in Gap-object. A random  value is assigned: gap_nonspheric_siberiantiger"},{"path":"https://shevandrin.github.io/qti/reference/TextGapOpal-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class TextGapOpal — TextGapOpal-class","title":"Class TextGapOpal — TextGapOpal-class","text":"Abstract class TextGapOpal responsible creating instances input fields text type answer question Entry type assessment task according QTI 2.1. LMS Opal","code":""},{"path":"https://shevandrin.github.io/qti/reference/TextGapOpal-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class TextGapOpal — TextGapOpal-class","text":"response_identifier string; identifier thy answer; default generated automatically points numeric, optional; number points gap; default 1 placeholder string, optional; responsible place helpful text text input field content delivery engine expected_length numeric, optional; responsible set size text input field content delivery engine solution string; contains vector values considered correct answers case_sensitive logical; determines whether evaluation correct answer case sensitive; default FALSE tolerance numeric; defines many characters taken account tolerate spelling mistake evaluation candidate answer","code":""},{"path":"https://shevandrin.github.io/qti/reference/TextGapOpal-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class TextGapOpal — TextGapOpal-class","text":"","code":"tgo <- new(\"TextGapOpal\",           solution = c(\"answer\",\"answerr\", \"aanswer\"),           placeholder = \"do not put special characters\",           tolerance = 1) #> Warning: There is no response_identifier in Gap-object. A random  value is assigned: gap_sacred_alpineroadguidetigerbeetle"},{"path":"https://shevandrin.github.io/qti/reference/WrongFeedback-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class WrongFeedback — WrongFeedback-class","title":"Class WrongFeedback — WrongFeedback-class","text":"Abstract class WrongFeedback responsible deliver feedback messages candidate case incorrect answer whole exercise","code":""},{"path":"https://shevandrin.github.io/qti/reference/WrongFeedback-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class WrongFeedback — WrongFeedback-class","text":"outcome_identifier string; identifier outcome declaration variable relates feedback show boolean, optional; responsible show (TRUE value) hide (FALSE); default TRUE identifier string; identifier model feedback item; default 'modal feedback' title string, optional; title model feedback item content list; list strings formatting form text question","code":""},{"path":"https://shevandrin.github.io/qti/reference/auth_opal.html","id":null,"dir":"Reference","previous_headings":"","what":"Authentification in OPAL API — auth_opal","title":"Authentification in OPAL API — auth_opal","text":"Function auth_opal() performs necessary authentication steps OPAL API. authentication successful, function sets token value system environment returns user's identity key OPAL. token value required access OPAL API system.","code":""},{"path":"https://shevandrin.github.io/qti/reference/auth_opal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authentification in OPAL API — auth_opal","text":"","code":"auth_opal(api_user = NULL, api_password = NULL, endpoint = NULL)"},{"path":"https://shevandrin.github.io/qti/reference/auth_opal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authentification in OPAL API — auth_opal","text":"api_user username OPAL api_password password OPAL endpoint endpoint LMS Opal; default got environment variable QTI_API_ENDPOINT. set global environment variable, need call Sys.setenv(QTI_API_ENDPOINT='xxxxxxxxxxxxxxx') can put command .Renviron.","code":""},{"path":"https://shevandrin.github.io/qti/reference/auth_opal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authentification in OPAL API — auth_opal","text":"user id","code":""},{"path":"https://shevandrin.github.io/qti/reference/auth_opal.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Authentification in OPAL API — auth_opal","text":"use OPAL API, need provide OPAL-username password. package uses system credential store 'keyring' store user's name password. first successful access OPAL API, need specify username password , extracted system credential store","code":""},{"path":"https://shevandrin.github.io/qti/reference/buildAssessmentSection-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Build tags for AssessmentSection in assessmentTest — buildAssessmentSection","title":"Build tags for AssessmentSection in assessmentTest — buildAssessmentSection","text":"Generic function tags contains assessementSection assessnetTest","code":""},{"path":"https://shevandrin.github.io/qti/reference/buildAssessmentSection-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build tags for AssessmentSection in assessmentTest — buildAssessmentSection","text":"","code":"buildAssessmentSection(object, folder = NULL)  # S4 method for AssessmentItem buildAssessmentSection(object, folder = NULL)  # S4 method for AssessmentSection buildAssessmentSection(object, folder = NULL)  # S4 method for AssessmentItemRef buildAssessmentSection(object)  # S4 method for character buildAssessmentSection(object, folder = NULL)"},{"path":"https://shevandrin.github.io/qti/reference/buildAssessmentSection-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build tags for AssessmentSection in assessmentTest — buildAssessmentSection","text":"object instance S4 object (AssessmentSection, AssessmentItemRef types AssessmentItem) folder string; folder store xml file","code":""},{"path":"https://shevandrin.github.io/qti/reference/createAssessmentTest-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an element assessmentTest of a qti-xml document for test — createAssessmentTest","title":"Create an element assessmentTest of a qti-xml document for test — createAssessmentTest","text":"Generic function creating assessmentTest element XML document specification test following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/createAssessmentTest-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an element assessmentTest of a qti-xml document for test — createAssessmentTest","text":"","code":"createAssessmentTest(object, folder)  # S4 method for AssessmentTest createAssessmentTest(object, folder)  # S4 method for AssessmentTestOpal createAssessmentTest(object, folder)"},{"path":"https://shevandrin.github.io/qti/reference/createAssessmentTest-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an element assessmentTest of a qti-xml document for test — createAssessmentTest","text":"object instance S4 object AssessmentTest AssessmentTestOpal folder string, optional; folder store xml file; working directory default","code":""},{"path":"https://shevandrin.github.io/qti/reference/createItemBody-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an element itemBody of a qti-xml document — createItemBody","title":"Create an element itemBody of a qti-xml document — createItemBody","text":"Generic function creating itemBody element XML document specification question following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/createItemBody-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an element itemBody of a qti-xml document — createItemBody","text":"","code":"createItemBody(object)  # S4 method for DirectedPair createItemBody(object)  # S4 method for Entry createItemBody(object)  # S4 method for Essay createItemBody(object)  # S4 method for MultipleChoice createItemBody(object)  # S4 method for MultipleChoiceTable createItemBody(object)  # S4 method for OneInColTable createItemBody(object)  # S4 method for OneInRowTable createItemBody(object)  # S4 method for Order createItemBody(object)  # S4 method for SingleChoice createItemBody(object)"},{"path":"https://shevandrin.github.io/qti/reference/createItemBody-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an element itemBody of a qti-xml document — createItemBody","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair)","code":""},{"path":"https://shevandrin.github.io/qti/reference/createOutcomeDeclaration-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an element outcomeDeclaration of a qti-xml document — createOutcomeDeclaration","title":"Create an element outcomeDeclaration of a qti-xml document — createOutcomeDeclaration","text":"Generic function creating outcomeDeclaration element XML document specification question following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/createOutcomeDeclaration-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an element outcomeDeclaration of a qti-xml document — createOutcomeDeclaration","text":"","code":"createOutcomeDeclaration(object)  # S4 method for AssessmentItem createOutcomeDeclaration(object)  # S4 method for AssessmentTest createOutcomeDeclaration(object)  # S4 method for Entry createOutcomeDeclaration(object)  # S4 method for Gap createOutcomeDeclaration(object)"},{"path":"https://shevandrin.github.io/qti/reference/createOutcomeDeclaration-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an element outcomeDeclaration of a qti-xml document — createOutcomeDeclaration","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/createQtiTask-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create XML file for question specification — createQtiTask-methods","title":"Create XML file for question specification — createQtiTask-methods","text":"Create XML file question specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/createQtiTask-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create XML file for question specification — createQtiTask-methods","text":"","code":"createQtiTask(object,                 dir = NULL,                 verification = FALSE)  # S4 method for AssessmentItem createQtiTask(object, dir = NULL, verification = FALSE)"},{"path":"https://shevandrin.github.io/qti/reference/createQtiTask-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create XML file for question specification — createQtiTask-methods","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair). dir string, optional; folder store xml file; working directory default verification boolean, optional; check validity xml file, default FALSE","code":""},{"path":"https://shevandrin.github.io/qti/reference/createQtiTask-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create XML file for question specification — createQtiTask-methods","text":"xml document.","code":""},{"path":"https://shevandrin.github.io/qti/reference/createQtiTask-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create XML file for question specification — createQtiTask-methods","text":"","code":"if (FALSE) { essay <- new(\"Essay\", prompt = \"Test task\", title = \"Essay\") createQtiTask(essay, \"result\", \"TRUE\") }"},{"path":"https://shevandrin.github.io/qti/reference/createQtiTest-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create zip-archive of the qti test specification — createQtiTest-methods","title":"Create zip-archive of the qti test specification — createQtiTest-methods","text":"Create zip-archive qti test specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/createQtiTest-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create zip-archive of the qti test specification — createQtiTest-methods","text":"","code":"createQtiTest(object, dir = NULL, verification = FALSE, zip_only =   FALSE)  # S4 method for AssessmentItem createQtiTest(object, dir = \".\", verification = FALSE, zip_only = FALSE)  # S4 method for AssessmentTest createQtiTest(object, dir = getwd(), verification = FALSE, zip_only = FALSE)  # S4 method for character createQtiTest(object, dir = getwd())"},{"path":"https://shevandrin.github.io/qti/reference/createQtiTest-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create zip-archive of the qti test specification — createQtiTest-methods","text":"object instance AssessmentTest, AssessmentTestOpal AssessmentItem S4 object dir string, optional; folder store xml file; working directory default verification boolean, optional; check validity xml file, default FALSE zip_only boolean, optional; returns zip file case TRUE zip, xml downloads files case FALSE value; FALSE default","code":""},{"path":"https://shevandrin.github.io/qti/reference/createQtiTest-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create zip-archive of the qti test specification — createQtiTest-methods","text":"xml document.","code":""},{"path":"https://shevandrin.github.io/qti/reference/createQtiTest-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create zip-archive of the qti test specification — createQtiTest-methods","text":"","code":"if (FALSE) { essay <- new(\"Essay\", prompt = \"Test task\", title = \"Essay\",              identifier = \"q1\") sc <- new(\"SingleChoice\", prompt = \"Test task\", title = \"SingleChoice\",           choices = c(\"A\", \"B\", \"C\"), identifier = \"q2\") exam_section <- new(\"AssessmentSection\", identifier = \"sec_id\",                    title = \"section\", assessment_item = list(essay, sc)) exam <- new(\"AssessmentTestOpal\", identifier = \"id_test\",            title = \"some title\", section = list(exam_section)) createQtiTest(exam, \"exam_folder\", \"TRUE\") }"},{"path":"https://shevandrin.github.io/qti/reference/createResponseDeclaration-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an element responseDeclaration of a qti-xml document — createResponseDeclaration","title":"Create an element responseDeclaration of a qti-xml document — createResponseDeclaration","text":"Generic function creating responseDeclaration element XML document specification question following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/createResponseDeclaration-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an element responseDeclaration of a qti-xml document — createResponseDeclaration","text":"","code":"createResponseDeclaration(object)  # S4 method for AssessmentItem createResponseDeclaration(object)  # S4 method for MatchTable createResponseDeclaration(object)  # S4 method for Entry createResponseDeclaration(object)  # S4 method for Essay createResponseDeclaration(object)  # S4 method for InlineChoice createResponseDeclaration(object)  # S4 method for MultipleChoice createResponseDeclaration(object)  # S4 method for MultipleChoiceTable createResponseDeclaration(object)  # S4 method for NumericGap createResponseDeclaration(object)  # S4 method for Order createResponseDeclaration(object)  # S4 method for SingleChoice createResponseDeclaration(object)  # S4 method for TextGap createResponseDeclaration(object)"},{"path":"https://shevandrin.github.io/qti/reference/createResponseDeclaration-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an element responseDeclaration of a qti-xml document — createResponseDeclaration","text":"object instance S4 object (SingleChoice, MultipleChoice, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/createResponseProcessing-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an element responseProcessing of a qti-xml document — createResponseProcessing","title":"Create an element responseProcessing of a qti-xml document — createResponseProcessing","text":"Generic function creating responseProcessing element XML document specification question following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/createResponseProcessing-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an element responseProcessing of a qti-xml document — createResponseProcessing","text":"","code":"createResponseProcessing(object)  # S4 method for AssessmentItem createResponseProcessing(object)  # S4 method for Entry createResponseProcessing(object)  # S4 method for Essay createResponseProcessing(object)  # S4 method for Gap createResponseProcessing(object)  # S4 method for NumericGap createResponseProcessing(object)  # S4 method for Order createResponseProcessing(object)  # S4 method for SingleChoice createResponseProcessing(object)  # S4 method for TextGapOpal createResponseProcessing(object)"},{"path":"https://shevandrin.github.io/qti/reference/createResponseProcessing-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an element responseProcessing of a qti-xml document — createResponseProcessing","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/createText-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose a set of html elements to display question in qti-xml document — createText","title":"Compose a set of html elements to display question in qti-xml document — createText","text":"Generic function creating set html elements display question XML document specification question following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/createText-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose a set of html elements to display question in qti-xml document — createText","text":"","code":"createText(object)  # S4 method for Gap createText(object)  # S4 method for InlineChoice createText(object)  # S4 method for character createText(object)"},{"path":"https://shevandrin.github.io/qti/reference/createText-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose a set of html elements to display question in qti-xml document — createText","text":"object instance S4 object (Gap, InlineChoice, character)","code":""},{"path":"https://shevandrin.github.io/qti/reference/createZip-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Zip archive of QTI test — createZip","title":"Create an Zip archive of QTI test — createZip","text":"Generic function creating zip archive set XML documents specification test following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/createZip-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Zip archive of QTI test — createZip","text":"","code":"createZip(object, input, output, file_name, zip_only)  # S4 method for AssessmentTest createZip(object, input, output, file_name, zip_only)  # S4 method for AssessmentTestOpal createZip(object, input, output, file_name, zip_only)"},{"path":"https://shevandrin.github.io/qti/reference/createZip-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Zip archive of QTI test — createZip","text":"object instance S4 object AssessmentTest AssessmentTestOpal input string, optional; source folder xml files output string, optional; folder store zip xml files; working directory default file_name string, optional; file name zip archive zip_only boolean, optional; returns zip file case TRUE zip, xml downloads files case FALSE value","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_assessment_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose a root element AssessmentItem of xml task — create_assessment_item","title":"Compose a root element AssessmentItem of xml task — create_assessment_item","text":"create_assessment_item() creates html structure AssessmentItem root element (shiny.tag) xml qti task description according QTI 2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_assessment_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose a root element AssessmentItem of xml task — create_assessment_item","text":"","code":"create_assessment_item(object)"},{"path":"https://shevandrin.github.io/qti/reference/create_assessment_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose a root element AssessmentItem of xml task — create_assessment_item","text":"object instance S4 object","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_assessment_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose a root element AssessmentItem of xml task — create_assessment_item","text":"list() shiny.tag class","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_qti_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Create XML file for question specification — create_qti_task","title":"Create XML file for question specification — create_qti_task","text":"Create XML file question specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_qti_task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create XML file for question specification — create_qti_task","text":"","code":"create_qti_task(object,                 dir = NULL,                 verification = FALSE)"},{"path":"https://shevandrin.github.io/qti/reference/create_qti_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create XML file for question specification — create_qti_task","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair). dir string, optional; folder store xml file; working directory default verification boolean, optional; check validity xml file, default FALSE","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_qti_task.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create XML file for question specification — create_qti_task","text":"xml document.","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_qti_task.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create XML file for question specification — create_qti_task","text":"","code":"if (FALSE) { essay <- new(\"Essay\", prompt = \"Test task\", title = \"Essay\") create_qti_task(essay, \"result\", \"TRUE\") }"},{"path":"https://shevandrin.github.io/qti/reference/create_qti_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Create XML file for exam test specification — create_qti_test","title":"Create XML file for exam test specification — create_qti_test","text":"Create XML file exam test specification","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_qti_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create XML file for exam test specification — create_qti_test","text":"","code":"create_qti_test(object, path = \".\", verification = FALSE, zip_only   = FALSE)"},{"path":"https://shevandrin.github.io/qti/reference/create_qti_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create XML file for exam test specification — create_qti_test","text":"object instance AssessmentTest S4 object path string, optional; path folder store zip file possible file name; working directory default verification boolean, optional; check validity xml file, default FALSE zip_only boolean, optional; returns zip file case TRUE zip, xml downloads files case FALSE value","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_qti_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create XML file for exam test specification — create_qti_test","text":"xml document.","code":""},{"path":"https://shevandrin.github.io/qti/reference/create_qti_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create XML file for exam test specification — create_qti_test","text":"","code":"if (FALSE) { essay <- new(\"Essay\", prompt = \"Test task\", title = \"Essay\",              identifier = \"q1\") sc <- new(\"SingleChoice\", prompt = \"Test task\", title = \"SingleChoice\",           choices = c(\"A\", \"B\", \"C\"), identifier = \"q2\") exam_section <- new(\"AssessmentSection\", identifier = \"sec_id\",                    title = \"section\", assessment_item = list(essay, sc)) exam <- new(\"AssessmentTestOpal\", identifier = \"id_test\",            title = \"some title\", section = list(exam_section)) create_qti_test(exam, \"exam_folder/exam.zip\", TRUE) }"},{"path":"https://shevandrin.github.io/qti/reference/dropdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Create YAML string for InlineChoice object (dropdown list) — dropdown","title":"Create YAML string for InlineChoice object (dropdown list) — dropdown","text":"Create YAML string InlineChoice object (dropdown list)","code":""},{"path":"https://shevandrin.github.io/qti/reference/dropdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create YAML string for InlineChoice object (dropdown list) — dropdown","text":"","code":"dropdown(   choices,   solution_index = 1,   points = 1,   shuffle = TRUE,   response_identifier = NULL )"},{"path":"https://shevandrin.github.io/qti/reference/dropdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create YAML string for InlineChoice object (dropdown list) — dropdown","text":"choices numeric character vector; contains values possible answers. use named vector, names used identifiers solution_index integer, optional; number right answer choices vector, default 1 points numeric, optional; number points gap; default 1 shuffle boolean, optional; responsible randomize order choices initially presented candidate; default TRUE response_identifier string; identifier answer; default generated automatically","code":""},{"path":"https://shevandrin.github.io/qti/reference/dropdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create YAML string for InlineChoice object (dropdown list) — dropdown","text":"string; map yaml","code":""},{"path":"https://shevandrin.github.io/qti/reference/extract_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data frame with test results — extract_results","title":"Create data frame with test results — extract_results","text":"function extract_results() takes Opal zip archive \"Export results\" xml file creates two kinds data frames (according parameter 'level'), see 'Details' section.","code":""},{"path":"https://shevandrin.github.io/qti/reference/extract_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data frame with test results — extract_results","text":"","code":"extract_results(file, level = \"exercises\", hide_filename = TRUE)"},{"path":"https://shevandrin.github.io/qti/reference/extract_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data frame with test results — extract_results","text":"file string path xml test result file level string two possible options: exercises items hide_filename boolean value, TRUE hide original file names default","code":""},{"path":"https://shevandrin.github.io/qti/reference/extract_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data frame with test results — extract_results","text":"data frame.","code":""},{"path":"https://shevandrin.github.io/qti/reference/extract_results.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create data frame with test results — extract_results","text":"1.optioin level = \"excercises\" data frame consists columns: 'file' - name xml file test results (identify candidate) 'date' - date time test 'id_question' - question item identifier 'duration' - time sec. candidate spent item 'score_candidate' - points given candidate evaluation 'score_max' - max possible score question 'question_type' - type question 'is_answer_given' - TRUE candidate gave answer question, otherwise FALSE 'title' - values attribute 'title' assessment items 2.option level = \"items\" data frame consists columns: 'file' - name xml file test results (identify candidate) 'date' - date time test 'id_question' - question item identifier 'base_type' - type answer (identifier, string float) 'cardinalities' - defines whether question single, multiple ordered -value 'qti_type' - specifies type task 'id_answer' - identifier response variable 'expected_response' - values considered right responses question 'candidate_response' - values given candidate 'score_candidate' - - points given candidate evaluation 'score_max' - max possible score question item 'is_response_correct' - TRUE candidate gave right response, otherwise FALSE 'title' - values attribute 'title' assessment items","code":""},{"path":"https://shevandrin.github.io/qti/reference/gap_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Create YAML string for NumericGap object — gap_numeric","title":"Create YAML string for NumericGap object — gap_numeric","text":"Create YAML string NumericGap object","code":""},{"path":"https://shevandrin.github.io/qti/reference/gap_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create YAML string for NumericGap object — gap_numeric","text":"","code":"gap_numeric(   solution,   tolerance = 0,   tolerance_type = \"absolute\",   points = 1,   response_identifier = NULL,   include_lower_bound = TRUE,   include_upper_bound = TRUE,   expected_length = size_gap(solution),   placeholder = NULL )"},{"path":"https://shevandrin.github.io/qti/reference/gap_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create YAML string for NumericGap object — gap_numeric","text":"solution numeric; contains right answer numeric entry tolerance numeric, optional; specifies value low boundaries tolerance rate candidate answer; defautl 0 tolerance_type string, optional; specifies tolerance mode; possible values:\"exact\", \"absolute\" (default), \"relative\" points numeric, optional; number points gap; default 1 response_identifier string; identifier answer; default generated automatically include_lower_bound boolean, optional; specifies whether lower bound included tolerance rate include_upper_bound boolean, optional; specifies whether upper bound included tolerance rate expected_length numeric, optional; responsible set size text input field content delivery engine placeholder string, optional; responsible place helpful text text input field content delivery engine","code":""},{"path":"https://shevandrin.github.io/qti/reference/gap_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create YAML string for NumericGap object — gap_numeric","text":"string; map yaml","code":""},{"path":"https://shevandrin.github.io/qti/reference/gap_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Create YAML string for TextGap object — gap_text","title":"Create YAML string for TextGap object — gap_text","text":"Create YAML string TextGap object","code":""},{"path":"https://shevandrin.github.io/qti/reference/gap_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create YAML string for TextGap object — gap_text","text":"","code":"gap_text(   solution,   tolerance = NULL,   case_sensitive = FALSE,   points = 1,   response_identifier = NULL,   expected_length = size_gap(solution),   placeholder = NULL )"},{"path":"https://shevandrin.github.io/qti/reference/gap_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create YAML string for TextGap object — gap_text","text":"solution string vector; contains vector values considered correct answers tolerance numeric, optional; defines many characters taken account tolerate spelling mistake evaluation candidate answer case_sensitive logical, optional; determines whether evaluation correct answer case sensitive; default FALSE points numeric, optional; number points gap; default 1 response_identifier string; identifier answer; default generated automatically expected_length numeric, optional; responsible set size text input field content delivery engine placeholder string, optional; responsible place helpful text text input field content delivery engine","code":""},{"path":"https://shevandrin.github.io/qti/reference/gap_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create YAML string for TextGap object — gap_text","text":"string; map yaml","code":""},{"path":"https://shevandrin.github.io/qti/reference/getAssessmentItems-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of AssessmentItems for AssessmentSection — getAssessmentItems","title":"Get list of AssessmentItems for AssessmentSection — getAssessmentItems","text":"Generic function ","code":""},{"path":"https://shevandrin.github.io/qti/reference/getAssessmentItems-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of AssessmentItems for AssessmentSection — getAssessmentItems","text":"","code":"getAssessmentItems(object)  # S4 method for AssessmentItem getAssessmentItems(object)  # S4 method for AssessmentSection getAssessmentItems(object)  # S4 method for AssessmentItemRef getAssessmentItems(object)  # S4 method for character getAssessmentItems(object)"},{"path":"https://shevandrin.github.io/qti/reference/getAssessmentItems-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of AssessmentItems for AssessmentSection — getAssessmentItems","text":"object instance S4 object (AssessmentSection, AssessmentItem)","code":""},{"path":"https://shevandrin.github.io/qti/reference/getCalculator-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get value of the slot 'calculator' — getCalculator-methods","title":"Get value of the slot 'calculator' — getCalculator-methods","text":"Get value slot 'calculator'","code":""},{"path":"https://shevandrin.github.io/qti/reference/getCalculator-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get value of the slot 'calculator' — getCalculator-methods","text":"","code":"getCalculator(object)  # S4 method for AssessmentItem getCalculator(object)  # S4 method for AssessmentSection getCalculator(object)  # S4 method for character getCalculator(object)"},{"path":"https://shevandrin.github.io/qti/reference/getCalculator-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get value of the slot 'calculator' — getCalculator-methods","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/getFiles-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file paths for attachment of test — getFiles-methods","title":"Get file paths for attachment of test — getFiles-methods","text":"Get file paths attachment test","code":""},{"path":"https://shevandrin.github.io/qti/reference/getFiles-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file paths for attachment of test — getFiles-methods","text":"","code":"getFiles(object)  # S4 method for AssessmentItem getFiles(object)  # S4 method for AssessmentSection getFiles(object)  # S4 method for character getFiles(object)"},{"path":"https://shevandrin.github.io/qti/reference/getFiles-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file paths for attachment of test — getFiles-methods","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/getIdentifier-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get identifier — getIdentifier-methods","title":"Get identifier — getIdentifier-methods","text":"Get identifier","code":""},{"path":"https://shevandrin.github.io/qti/reference/getIdentifier-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get identifier — getIdentifier-methods","text":"","code":"getIdentifier(object)  # S4 method for AssessmentItem getIdentifier(object)  # S4 method for AssessmentSection getIdentifier(object)  # S4 method for Gap getIdentifier(object)  # S4 method for character getIdentifier(object)"},{"path":"https://shevandrin.github.io/qti/reference/getIdentifier-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get identifier — getIdentifier-methods","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/getObject-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get object — getObject-methods","title":"Get object — getObject-methods","text":"Get object","code":""},{"path":"https://shevandrin.github.io/qti/reference/getObject-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get object — getObject-methods","text":"","code":"getObject(object)  # S4 method for AssessmentItem getObject(object)  # S4 method for AssessmentSection getObject(object)  # S4 method for character getObject(object)"},{"path":"https://shevandrin.github.io/qti/reference/getObject-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get object — getObject-methods","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/getPoints-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get points from AssessmentItem object — getPoints-methods","title":"Get points from AssessmentItem object — getPoints-methods","text":"Get points AssessmentItem object","code":""},{"path":"https://shevandrin.github.io/qti/reference/getPoints-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get points from AssessmentItem object — getPoints-methods","text":"","code":"getPoints(object)  # S4 method for AssessmentItem getPoints(object)  # S4 method for AssessmentSection getPoints(object)  # S4 method for MultipleChoice getPoints(object)  # S4 method for character getPoints(object)"},{"path":"https://shevandrin.github.io/qti/reference/getPoints-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get points from AssessmentItem object — getPoints-methods","text":"object instance S4 object (SingleChoice, MultipleChoice, Essay, Entry, Order, OneInRowTable, OneInColTable, MultipleChoiceTable, DirectedPair, TextGap, NumericGap, InlineChoice)","code":""},{"path":"https://shevandrin.github.io/qti/reference/getResponse-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and process a piece of question content — getResponse","title":"Get and process a piece of question content — getResponse","text":"Generic function get process different types question content (text instances gaps dropdown lists) XML document specification question following QTI schema v2.1","code":""},{"path":"https://shevandrin.github.io/qti/reference/getResponse-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and process a piece of question content — getResponse","text":"","code":"getResponse(object)  # S4 method for InlineChoice getResponse(object)  # S4 method for NumericGap getResponse(object)  # S4 method for TextGap getResponse(object)  # S4 method for character getResponse(object)"},{"path":"https://shevandrin.github.io/qti/reference/getResponse-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and process a piece of question content — getResponse","text":"object instance S4 object (NumericGap, TextGap, InlineChoice, character)","code":""},{"path":"https://shevandrin.github.io/qti/reference/get_resource_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a URL using the resource's display name in LMS OPAL — get_resource_url","title":"Create a URL using the resource's display name in LMS OPAL — get_resource_url","text":"Create URL using resource's display name LMS OPAL","code":""},{"path":"https://shevandrin.github.io/qti/reference/get_resource_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a URL using the resource's display name in LMS OPAL — get_resource_url","text":"","code":"get_resource_url(   display_name,   endpoint = NULL,   api_user = NULL,   api_password = NULL )"},{"path":"https://shevandrin.github.io/qti/reference/get_resource_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a URL using the resource's display name in LMS OPAL — get_resource_url","text":"display_name character; target display_name endpoint endpoint LMS Opal; default got environment variable QTI_API_ENDPOINT. set global environment variable, need call Sys.setenv(QTI_API_ENDPOINT='xxxxxxxxxxxxxxx') can put command .Renviron. api_user username OPAL api_password password OPAL","code":""},{"path":"https://shevandrin.github.io/qti/reference/get_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of all user's resources on LMS OPAL — get_resources","title":"Get list of all user's resources on LMS OPAL — get_resources","text":"Get list user's resources LMS OPAL","code":""},{"path":"https://shevandrin.github.io/qti/reference/get_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of all user's resources on LMS OPAL — get_resources","text":"","code":"get_resources(api_user = NULL, api_password = NULL, endpoint = NULL)"},{"path":"https://shevandrin.github.io/qti/reference/get_resources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of all user's resources on LMS OPAL — get_resources","text":"api_user username OPAL api_password password OPAL endpoint endpoint LMS Opal; default got environment variable QTI_API_ENDPOINT. set global environment variable, need call Sys.setenv(QTI_API_ENDPOINT='xxxxxxxxxxxxxxx') can put command .Renviron.","code":""},{"path":"https://shevandrin.github.io/qti/reference/mdlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create markdown list for answer options — mdlist","title":"Create markdown list for answer options — mdlist","text":"Create markdown list answer options","code":""},{"path":"https://shevandrin.github.io/qti/reference/mdlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create markdown list for answer options — mdlist","text":"","code":"mdlist(vect, solutions = NULL, gaps = NULL)"},{"path":"https://shevandrin.github.io/qti/reference/mdlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create markdown list for answer options — mdlist","text":"vect string numeric vector answer options single/multiple choice task solutions numeric, optional; indexes right answer options vect gaps numeric string vector, optional; provides primitive description build gaps content Entry task","code":""},{"path":"https://shevandrin.github.io/qti/reference/mdlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create markdown list for answer options — mdlist","text":"markdown list","code":""},{"path":"https://shevandrin.github.io/qti/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://shevandrin.github.io/qti/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://shevandrin.github.io/qti/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://shevandrin.github.io/qti/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://shevandrin.github.io/qti/reference/prepare_renderer.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare QTIJS renderer — prepare_renderer","title":"Prepare QTIJS renderer — prepare_renderer","text":"Starts server QTIJS, returns path QTIJS url server.","code":""},{"path":"https://shevandrin.github.io/qti/reference/prepare_renderer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare QTIJS renderer — prepare_renderer","text":"","code":"prepare_renderer()"},{"path":"https://shevandrin.github.io/qti/reference/qtijs_path.html","id":null,"dir":"Reference","previous_headings":"","what":"shortcut for the correct QTIJS path — qtijs_path","title":"shortcut for the correct QTIJS path — qtijs_path","text":"shortcut correct QTIJS path","code":""},{"path":"https://shevandrin.github.io/qti/reference/qtijs_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shortcut for the correct QTIJS path — qtijs_path","text":"","code":"qtijs_path()"},{"path":"https://shevandrin.github.io/qti/reference/render_opal.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Rmd directly in Opal via API — render_opal","title":"Render Rmd directly in Opal via API — render_opal","text":"Render Rmd directly Opal via API","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_opal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Rmd directly in Opal via API — render_opal","text":"","code":"render_opal(input, ...)"},{"path":"https://shevandrin.github.io/qti/reference/render_opal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Rmd directly in Opal via API — render_opal","text":"input (path input Rmd document) ... required passing arguments knitting","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_qtijs.html","id":null,"dir":"Reference","previous_headings":"","what":"Render an RMD file as qti xml with QTIJS — render_qtijs","title":"Render an RMD file as qti xml with QTIJS — render_qtijs","text":"Generates qti xml file via rmd2xml. xml copied QTIJS folder package transforms xml HTML. Finally, HTML displayed user can preview exercise exam.","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_qtijs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render an RMD file as qti xml with QTIJS — render_qtijs","text":"","code":"render_qtijs(input, ...)"},{"path":"https://shevandrin.github.io/qti/reference/render_qtijs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render an RMD file as qti xml with QTIJS — render_qtijs","text":"input (path input Rmd document) ... required passing arguments knitting","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_qtijs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render an RMD file as qti xml with QTIJS — render_qtijs","text":"Requires running QTIJS server, can started start_server(). loading package qti, server started automatically. preview automatically loaded RStudio viewer. Alternatively  can just open browser corresponding local server displayed rendering. Since function supposed called via Knit-Button RStudio, defaults RStudio viewer pane.","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_qtijs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render an RMD file as qti xml with QTIJS — render_qtijs","text":"","code":"# Customize knit function in the Rmd file using the following YAML setting # after the word knit: if (FALSE) qti::knit_qti"},{"path":"https://shevandrin.github.io/qti/reference/render_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a single xml file — render_xml","title":"Render a single xml file — render_xml","text":"Uses QTIJS render single xml file RStudio viewer pane local server.","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a single xml file — render_xml","text":"","code":"render_xml(input)"},{"path":"https://shevandrin.github.io/qti/reference/render_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a single xml file — render_xml","text":"input input file","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a single xml file — render_xml","text":"nothing, side effects","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a zipped qti archive — render_zip","title":"Render a zipped qti archive — render_zip","text":"Uses QTIJS render zipped qti archive RStudio viewer pane local server.","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a zipped qti archive — render_zip","text":"","code":"render_zip(input)"},{"path":"https://shevandrin.github.io/qti/reference/render_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a zipped qti archive — render_zip","text":"input input file","code":""},{"path":"https://shevandrin.github.io/qti/reference/render_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a zipped qti archive — render_zip","text":"nothing, side effects","code":""},{"path":"https://shevandrin.github.io/qti/reference/rmd2xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create qti-XML task file from Rmd (md) description — rmd2xml","title":"Create qti-XML task file from Rmd (md) description — rmd2xml","text":"Create XML file question specification Rmd (md) description according qti 2.1 infromation model","code":""},{"path":"https://shevandrin.github.io/qti/reference/rmd2xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create qti-XML task file from Rmd (md) description — rmd2xml","text":"","code":"rmd2xml(file, path = getwd(), verification = FALSE)"},{"path":"https://shevandrin.github.io/qti/reference/rmd2xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create qti-XML task file from Rmd (md) description — rmd2xml","text":"file file markdown description question. path string, optional; folder store xml file, can contain file name; working directory default verification boolean, optional; check validity xml file, default FALSE","code":""},{"path":"https://shevandrin.github.io/qti/reference/rmd2zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Create test zip file with one task xml file from Rmd (md) description — rmd2zip","title":"Create test zip file with one task xml file from Rmd (md) description — rmd2zip","text":"Create zip file test, contains one xml question specification generated Rmd (md) description according qti 2.1 information model","code":""},{"path":"https://shevandrin.github.io/qti/reference/rmd2zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create test zip file with one task xml file from Rmd (md) description — rmd2zip","text":"","code":"rmd2zip(file, path = getwd(), verification = FALSE)"},{"path":"https://shevandrin.github.io/qti/reference/rmd2zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create test zip file with one task xml file from Rmd (md) description — rmd2zip","text":"file file markdown description question. path string, optional; folder store xml file; working directory default verification boolean, optional; check validity xml file, default FALSE","code":""},{"path":"https://shevandrin.github.io/qti/reference/section.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a section as a part of test content — section","title":"Create a section as a part of test content — section","text":"Create section part test content","code":""},{"path":"https://shevandrin.github.io/qti/reference/section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a section as a part of test content — section","text":"","code":"section(   content,   n_variants = 1,   seed_number = NULL,   id = NULL,   by = \"variants\",   selection = NULL,   title = character(0),   time_limits = NA_integer_,   visible = TRUE,   shuffle = FALSE,   max_attempts = NA_integer_,   allow_comment = TRUE )"},{"path":"https://shevandrin.github.io/qti/reference/section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a section as a part of test content — section","text":"content string; vector Rmd, md, xml files, task- section-objects n_variants integer; number variants create Rmd files seed_number integer vector, optional; seed numbers reproduce result calculations id string, optional; identifier assessment section \"variants\" \"files\"; type test structure; \"variants\" default selection numeric, optional; defines many children section delivered test; default NULL, gives \"selection\" class level title string, optional; title section time_limits integer, optional; controls amount time candidate allowed part test visible boolean, optional; TRUE shows section hierarchy test structure; default TRUE shuffle boolean, optional; responsible randomize order assessment items subsections initially presented candidate; default FALSE max_attempts numeric, optional; enables maximum number attempts, candidate allowed pass section allow_comment boolean, optional; enables allow candidate leave comments question section; TRUE default","code":""},{"path":"https://shevandrin.github.io/qti/reference/section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a section as a part of test content — section","text":"object AssessmentSection-class","code":""},{"path":"https://shevandrin.github.io/qti/reference/start_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Start QTIJS on a local server — start_server","title":"Start QTIJS on a local server — start_server","text":"function starts http server QTIJS renderer. renderer performs conversion qti.xml HTML.","code":""},{"path":"https://shevandrin.github.io/qti/reference/start_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start QTIJS on a local server — start_server","text":"","code":"start_server()"},{"path":"https://shevandrin.github.io/qti/reference/start_server.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start QTIJS on a local server — start_server","text":"server started manually user, otherwise Knit Button work. Button starts new session invoking server make much sense.","code":""},{"path":[]},{"path":"https://shevandrin.github.io/qti/reference/stop_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop QTIJS local server — stop_server","title":"Stop QTIJS local server — stop_server","text":"Stop QTIJS local server","code":""},{"path":"https://shevandrin.github.io/qti/reference/stop_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop QTIJS local server — stop_server","text":"","code":"stop_server()"},{"path":"https://shevandrin.github.io/qti/reference/test.html","id":null,"dir":"Reference","previous_headings":"","what":"Create test — test","title":"Create test — test","text":"Create test","code":""},{"path":"https://shevandrin.github.io/qti/reference/test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create test — test","text":"","code":"test(   content,   identifier = \"test_identifier\",   title = \"Test Title\",   time_limit = 90,   max_attempts = 1,   academic_grading = FALSE,   grade_label = c(en = \"Grade\", de = \"Note\"),   navigation_mode = \"nonlinear\",   submission_mode = \"individual\",   allow_comment = TRUE,   rebuild_variables = TRUE )"},{"path":"https://shevandrin.github.io/qti/reference/test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create test — test","text":"content list containing AssessmentSection objects. identifier string indicating identifier test file. Default 'test_identifier'. title string, optional, representing file title. Default 'Test Title'. time_limit numeric value, optional, controlling time given candidate test minutes. Default 90 minutes. max_attempts numeric value, optional, indicating maximum number attempts allowed candidate. Default 1. academic_grading boolean, optional; enables show candidate end testing grade according 5-point academic grade system feedback; FALSE default. grade_label string, optional; short message shows grade final feedback; multilingual use, can named vector two-letter ISO language codes names (e.g., c(en=\"Grade\", de=\"Note\")); test creation, takes value language operating system; c(en=\"Grade\", de=\"Note\") default navigation_mode string, optional, determining general paths candidate may exam. Two mode options possible: 'linear': Candidate allowed return previous questions. 'nonlinear': Candidate free navigate; used default. submission_mode string, optional, determining candidate's responses submitted response processing. One two mode options possible: 'individual': Submit candidates' responses item--item basis; used default. 'simultaneous': Candidates' responses submitted together end test. allow_comment boolean, optional, enabling candidate leave comments question. TRUE default. rebuild_variables boolean, optional, enabling recalculation variables reshuffling order choices item-attempt. TRUE default.","code":""},{"path":"https://shevandrin.github.io/qti/reference/test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create test — test","text":"AssessmentTest object","code":""},{"path":"https://shevandrin.github.io/qti/reference/test4opal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create test for LMS Opal — test4opal","title":"Create test for LMS Opal — test4opal","text":"Create test LMS Opal","code":""},{"path":"https://shevandrin.github.io/qti/reference/test4opal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create test for LMS Opal — test4opal","text":"","code":"test4opal(   content,   identifier = \"test_identifier\",   title = \"Test Title\",   time_limit = 90,   max_attempts = 1,   files = NULL,   calculator = \"scientific-calculator\",   academic_grading = FALSE,   grade_label = c(en = \"Grade\", de = \"Note\"),   navigation_mode = \"nonlinear\",   submission_mode = \"individual\",   allow_comment = TRUE,   rebuild_variables = TRUE,   show_test_time = TRUE,   mark_items = TRUE,   keep_responses = FALSE )"},{"path":"https://shevandrin.github.io/qti/reference/test4opal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create test for LMS Opal — test4opal","text":"content list containing AssessmentSection objects. identifier string indicating identifier test file. Default 'test_identifier'. title string, optional, representing file title. Default 'Test Title'. time_limit numeric value, optional, controlling time given candidate test minutes. Default 90 minutes. max_attempts numeric value, optional, indicating maximum number attempts allowed candidate. Default 1. files character vector, optional; paths files accessible candidate test/exam. calculator character, optional; determines whether show calculator candidate. Possible values: 'simple-calculator' 'scientific-calculator' (assigned default). academic_grading boolean, optional; enables show candidate end testing grade according 5-point academic grade system feedback; FALSE default. grade_label string, optional; short message shows grade final feedback; multilingual use, can named vector two-letter ISO language codes names (e.g., c(en=\"Grade\", de=\"Note\")); test creation, takes value language operating system; c(en=\"Grade\", de=\"Note\")default. navigation_mode string, optional, determining general paths candidate may exam. Two mode options possible: 'linear': Candidate allowed return previous questions. 'nonlinear': Candidate free navigate; used default. submission_mode string, optional, determining candidate's responses submitted response processing. One two mode options possible: 'individual': Submit candidates' responses item--item basis; used default. 'simultaneous': Candidates' responses submitted together end test. allow_comment boolean, optional, enabling candidate leave comments question. TRUE default. rebuild_variables boolean, optional, enabling recalculation variables reshuffling order choices item-attempt. TRUE default. show_test_time boolean, optional, determining whether show candidate elapsed processing time without time limit. Default TRUE. mark_items boolean, optional, determining whether allow candidate marking questions. Default TRUE. keep_responses boolean, optional, determining whether save candidate's answers previous attempt. Default FALSE.","code":""},{"path":"https://shevandrin.github.io/qti/reference/test4opal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create test for LMS Opal — test4opal","text":"AssessmentTestOpal object","code":""},{"path":"https://shevandrin.github.io/qti/reference/upload2opal.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload resource on OPAL — upload2opal","title":"Upload resource on OPAL — upload2opal","text":"Function upload2opal() takes full prepared zip archive QTI-test QTI-task uploads OPAL. calling upload2opal() authentication procedure performed. See auth_opal","code":""},{"path":"https://shevandrin.github.io/qti/reference/upload2opal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload resource on OPAL — upload2opal","text":"","code":"upload2opal(   test,   display_name = NULL,   access = 4,   overwrite = TRUE,   endpoint = NULL,   open_in_browser = TRUE,   api_user = NULL,   api_password = NULL )"},{"path":"https://shevandrin.github.io/qti/reference/upload2opal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload resource on OPAL — upload2opal","text":"test required; length one character vector AssessmentTest, AssessmentTestOpal AssessmentItem objects, Rmd md files display_name optional; length one character vector entitle file OPAL; file name without extension default access optional; responsible publication status, 1 - responsible learning resource; 2 - responsible authors; 3 - registered users; 4 - default value, registered users guests overwrite logical; one file specified display name found, overwritten endpoint endpoint LMS Opal; default got environment variable QTI_API_ENDPOINT. set global environment variable, need call Sys.setenv(QTI_API_ENDPOINT='xxxxxxxxxxxxxxx') can put command .Renviron. open_in_browser logical, optional; parameter controls whether open URL default browser; TRUE default api_user username OPAL api_password password OPAL","code":""},{"path":"https://shevandrin.github.io/qti/reference/upload2opal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload resource on OPAL — upload2opal","text":"list key url","code":""},{"path":"https://shevandrin.github.io/qti/reference/upload2opal.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Upload resource on OPAL — upload2opal","text":"use OPAL API, need provide OPAL-username password. package uses system credential store 'keyring' store user's name password. first successful access OPAL API, need specify username password , extracted system credential store","code":""}]
